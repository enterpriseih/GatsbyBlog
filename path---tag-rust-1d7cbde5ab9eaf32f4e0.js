webpackJsonp([0x70e7dd554bbe],{1489:function(n,s){n.exports={data:{site:{siteMetadata:{title:"女王控的博客",description:'前端工程师，黑猫女王控，欢迎勾搭，技术相关<a href="https://github.com/towavephone" target="_blank">@towavephone</a>，QQ闲聊<a href="tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=634407147&website=www.oicqzone.com">@towave</a>，bili关注<a href="https://space.bilibili.com/11507708#/" target="_blank">@towave</a>',siteUrl:"https://blog.towavephone.com"}}},pathContext:{posts:[{excerpt:"背景知识 Rust 语言圣经 变量绑定与解构 绑定和可变性 变量只有在初始化后才能被使用 我的解答 可以使用 mut 将变量标记为可变 我的解答 变量作用域 作用域是一个变量在程序中能够保持合法的范围 问题一 我的解答 最佳解答 问题二 我的解答 最佳解答 变量遮蔽（Shadowing） 若后面的变量声明的名称和之前的变量相同，则我们说：第一个变量被第二个同名变量遮蔽了（shadowing） 我的解答 删除一行代码以通过编译 我的解答 未使用的变量 使用以下方法来修复编译器输出的 warning…",html:'<h1 id="背景知识"><a href="#%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>背景知识</h1>\n<p><a href="https://course.rs/about-book.html" target="_blank" rel="nofollow noreferrer noopener">Rust 语言圣经</a></p>\n<h1 id="变量绑定与解构"><a href="#%E5%8F%98%E9%87%8F%E7%BB%91%E5%AE%9A%E4%B8%8E%E8%A7%A3%E6%9E%84" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>变量绑定与解构</h1>\n<h2 id="绑定和可变性"><a href="#%E7%BB%91%E5%AE%9A%E5%92%8C%E5%8F%AF%E5%8F%98%E6%80%A7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>绑定和可变性</h2>\n<h3 id="变量只有在初始化后才能被使用"><a href="#%E5%8F%98%E9%87%8F%E5%8F%AA%E6%9C%89%E5%9C%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E5%90%8E%E6%89%8D%E8%83%BD%E8%A2%AB%E4%BD%BF%E7%94%A8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>变量只有在初始化后才能被使用</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="32059158112015008000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复下面代码的错误并尽可能少的修改\nfn main() {\n    let x: i32; // 未初始化，但被使用\n    let y: i32; // 未初始化，也未被使用\n    println!(&quot;x is equal to {}&quot;, x);\n}`, `32059158112015008000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复下面代码的错误并尽可能少的修改</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32<span class="token punctuation">;</span> <span class="token comment">// 未初始化，但被使用</span>\n    <span class="token keyword">let</span> y<span class="token punctuation">:</span> i32<span class="token punctuation">;</span> <span class="token comment">// 未初始化，也未被使用</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x is equal to {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="96414688160884210000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复下面代码的错误并尽可能少的修改\nfn main() {\n    let x: i32 = 0; // 未初始化，但被使用\n    let _y: i32; // 未初始化，也未被使用\n    println!(&quot;x is equal to {}&quot;, x);\n}`, `96414688160884210000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复下面代码的错误并尽可能少的修改</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 未初始化，但被使用</span>\n    <span class="token keyword">let</span> _y<span class="token punctuation">:</span> i32<span class="token punctuation">;</span> <span class="token comment">// 未初始化，也未被使用</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x is equal to {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="可以使用-mut-将变量标记为可变"><a href="#%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8-mut-%E5%B0%86%E5%8F%98%E9%87%8F%E6%A0%87%E8%AE%B0%E4%B8%BA%E5%8F%AF%E5%8F%98" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>可以使用 mut 将变量标记为可变</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="11140124869450707000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 完形填空，让代码编译\nfn main() {\n    let __ =  1;\n    __ += 2;\n\n    println!(&quot;x = {}&quot;, x);\n}`, `11140124869450707000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 完形填空，让代码编译</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> __ <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">;</span>\n    __ <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x = {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-1"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="59788247502948820000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 完形填空，让代码编译\nfn main() {\n    let mut x = 1;\n    x += 2;\n\n    println!(&quot;x = {}&quot;, x);\n}`, `59788247502948820000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 完形填空，让代码编译</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    x <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x = {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="变量作用域"><a href="#%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>变量作用域</h2>\n<h3 id="作用域是一个变量在程序中能够保持合法的范围"><a href="#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E5%9C%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E8%83%BD%E5%A4%9F%E4%BF%9D%E6%8C%81%E5%90%88%E6%B3%95%E7%9A%84%E8%8C%83%E5%9B%B4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>作用域是一个变量在程序中能够保持合法的范围</h3>\n<h4 id="问题一"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="1129764600799654300"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复下面代码的错误并使用尽可能少的改变\nfn main() {\n    let x: i32 = 10;\n    {\n        let y: i32 = 5;\n        println!(&quot;x 的值是 {}, y 的值是 {}&quot;, x, y);\n    }\n    println!(&quot;x 的值是 {}, y 的值是 {}&quot;, x, y);\n}`, `1129764600799654300`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复下面代码的错误并使用尽可能少的改变</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> y<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x 的值是 {}, y 的值是 {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x 的值是 {}, y 的值是 {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-2"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="52209006626795880000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复下面代码的错误并使用尽可能少的改变\nfn main() {\n    let x: i32 = 10;\n    let y: i32 = 5;\n    {\n        println!(&quot;x 的值是 {}, y 的值是 {}&quot;, x, y);\n    }\n    println!(&quot;x 的值是 {}, y 的值是 {}&quot;, x, y);\n}`, `52209006626795880000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复下面代码的错误并使用尽可能少的改变</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x 的值是 {}, y 的值是 {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x 的值是 {}, y 的值是 {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="最佳解答"><a href="#%E6%9C%80%E4%BD%B3%E8%A7%A3%E7%AD%94" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>最佳解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="2468019781620145700"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x: i32 = 10;\n    {\n        let y: i32 = 5;\n        println!(&quot;The value of x is {} and value of y is {}&quot;, x, y);\n    }\n    println!(&quot;The value of x is {}&quot;, x);\n}`, `2468019781620145700`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> y<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"The value of x is {} and value of y is {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"The value of x is {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="问题二"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="79825410014177620000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nfn main() {\n    println!(&quot;{}, world&quot;, x);\n}\n\nfn define_x() {\n    let x = &quot;hello&quot;;\n}`, `79825410014177620000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}, world"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">define_x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-3"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="33451217993884795000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nfn main() {\n    let x = define_x();\n    println!(&quot;{}, world&quot;, x);\n}\n\nfn define_x() -> &\'static str {\n    let x = &quot;hello&quot;;\n    x\n}`, `33451217993884795000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">define_x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}, world"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">define_x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">\'static</span> str <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>\n    x\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="最佳解答-1"><a href="#%E6%9C%80%E4%BD%B3%E8%A7%A3%E7%AD%94-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>最佳解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="85938542233897570000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = define_x();\n    println!(&quot;{}, world&quot;, x);\n}\n\nfn define_x() -> String {\n    let x = &quot;hello&quot;.to_string();\n    x\n}`, `85938542233897570000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">define_x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}, world"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">define_x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    x\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="变量遮蔽（shadowing）"><a href="#%E5%8F%98%E9%87%8F%E9%81%AE%E8%94%BD%EF%BC%88shadowing%EF%BC%89" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>变量遮蔽（Shadowing）</h2>\n<h3 id="若后面的变量声明的名称和之前的变量相同，则我们说：第一个变量被第二个同名变量遮蔽了（shadowing）"><a href="#%E8%8B%A5%E5%90%8E%E9%9D%A2%E7%9A%84%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E7%9A%84%E5%90%8D%E7%A7%B0%E5%92%8C%E4%B9%8B%E5%89%8D%E7%9A%84%E5%8F%98%E9%87%8F%E7%9B%B8%E5%90%8C%EF%BC%8C%E5%88%99%E6%88%91%E4%BB%AC%E8%AF%B4%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E8%A2%AB%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%90%8C%E5%90%8D%E5%8F%98%E9%87%8F%E9%81%AE%E8%94%BD%E4%BA%86%EF%BC%88shadowing%EF%BC%89" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>若后面的变量声明的名称和之前的变量相同，则我们说：第一个变量被第二个同名变量遮蔽了（shadowing）</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="3858524589101764000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 只允许修改 \\`assert_eq!\\` 来让 \\`println!\\` 工作(在终端输出 \\`42\\`)\nfn main() {\n    let x: i32 = 5;\n    {\n        let x = 12;\n        assert_eq!(x, 5);\n    }\n\n    assert_eq!(x, 12);\n\n    let x = 42;\n    println!(&quot;{}&quot;, x); // 输出 &quot;42&quot;.\n}`, `3858524589101764000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 只允许修改 `assert_eq!` 来让 `println!` 工作(在终端输出 `42`)</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>\n        <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 "42".</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-4"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="25078402191493840000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 只允许修改 \\`assert_eq!\\` 来让 \\`println!\\` 工作(在终端输出 \\`42\\`)\nfn main() {\n    let x: i32 = 5;\n    {\n        let x = 12;\n        assert_eq!(x, 12);\n    }\n\n    assert_eq!(x, 5);\n\n    let x = 42;\n    println!(&quot;{}&quot;, x); // 输出 &quot;42&quot;.\n}`, `25078402191493840000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 只允许修改 `assert_eq!` 来让 `println!` 工作(在终端输出 `42`)</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>\n        <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 "42".</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="删除一行代码以通过编译"><a href="#%E5%88%A0%E9%99%A4%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E4%BB%A5%E9%80%9A%E8%BF%87%E7%BC%96%E8%AF%91" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>删除一行代码以通过编译</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="15984023496211685000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut x: i32 = 1;\n    x = 7;\n    // 遮蔽且再次绑定\n    let x = x;\n    x += 3;\n\n\n    let y = 4;\n    // 遮蔽\n    let y = &quot;I can also be bound to text!&quot;;\n}`, `15984023496211685000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    x <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>\n    <span class="token comment">// 遮蔽且再次绑定</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> x<span class="token punctuation">;</span>\n    x <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n\n\n    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n    <span class="token comment">// 遮蔽</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token string">"I can also be bound to text!"</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-5"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-5" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="43125981180655400000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut x: i32 = 1;\n    x = 7;\n    // 遮蔽且再次绑定\n    let x = x;\n\n    let y = 4;\n    // 遮蔽\n    let y = &quot;I can also be bound to text!&quot;;\n}`, `43125981180655400000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    x <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>\n    <span class="token comment">// 遮蔽且再次绑定</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> x<span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n    <span class="token comment">// 遮蔽</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token string">"I can also be bound to text!"</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="未使用的变量"><a href="#%E6%9C%AA%E4%BD%BF%E7%94%A8%E7%9A%84%E5%8F%98%E9%87%8F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>未使用的变量</h2>\n<h3 id="使用以下方法来修复编译器输出的-warning"><a href="#%E4%BD%BF%E7%94%A8%E4%BB%A5%E4%B8%8B%E6%96%B9%E6%B3%95%E6%9D%A5%E4%BF%AE%E5%A4%8D%E7%BC%96%E8%AF%91%E5%99%A8%E8%BE%93%E5%87%BA%E7%9A%84-warning" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>使用以下方法来修复编译器输出的 warning:</h3>\n<ul>\n<li>一种方法</li>\n<li>两种方法</li>\n</ul>\n<blockquote>\n<p>注意: 你可以使用两种方法解决，但是它们没有一种是移除 <code class="language-text">let x = 1</code> 所在的代码行</p>\n</blockquote>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="64533098169749190000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = 1;\n}\n\n// compiler warning: unused variable: \\`x\\``, `64533098169749190000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// compiler warning: unused variable: `x`</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-6"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="1420104332762783700"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let _x = 1;\n}\n\n// compiler warning: unused variable: \\`x\\``, `1420104332762783700`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// compiler warning: unused variable: `x`</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="48762058389626370000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`#[allow(unused_variables)]\nfn main() {\n    let x = 1;\n}\n\n// compiler warning: unused variable: \\`x\\``, `48762058389626370000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token attribute attr-name">#[allow(unused_variables)]</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// compiler warning: unused variable: `x`</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="变量解构"><a href="#%E5%8F%98%E9%87%8F%E8%A7%A3%E6%9E%84" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>变量解构</h2>\n<h3 id="我们可以将-let-跟一个模式一起使用来解构一个元组，最终将它解构为多个独立的变量"><a href="#%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%B0%86-let-%E8%B7%9F%E4%B8%80%E4%B8%AA%E6%A8%A1%E5%BC%8F%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E6%9D%A5%E8%A7%A3%E6%9E%84%E4%B8%80%E4%B8%AA%E5%85%83%E7%BB%84%EF%BC%8C%E6%9C%80%E7%BB%88%E5%B0%86%E5%AE%83%E8%A7%A3%E6%9E%84%E4%B8%BA%E5%A4%9A%E4%B8%AA%E7%8B%AC%E7%AB%8B%E7%9A%84%E5%8F%98%E9%87%8F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我们可以将 let 跟一个模式一起使用来解构一个元组，最终将它解构为多个独立的变量</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="86922474250020300000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复下面代码的错误并尽可能少的修改\nfn main() {\n    let (x, y) = (1, 2);\n    x += 2;\n\n    assert_eq!(x, 3);\n    assert_eq!(y, 2);\n}`, `86922474250020300000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复下面代码的错误并尽可能少的修改</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    x <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-7"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="79328674521711080000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复下面代码的错误并尽可能少的修改\nfn main() {\n    let (mut x, y) = (1, 2);\n    x += 2;\n\n    assert_eq!(x, 3);\n    assert_eq!(y, 2);\n}`, `79328674521711080000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复下面代码的错误并尽可能少的修改</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token keyword">mut</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    x <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="5642028267284860000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复下面代码的错误并尽可能少的修改\nfn main() {\n    let (x, y) = (1, 2);\n    let x = 3;\n\n    assert_eq!(x, 3);\n    assert_eq!(y, 2);\n}`, `5642028267284860000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复下面代码的错误并尽可能少的修改</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="解构式赋值"><a href="#%E8%A7%A3%E6%9E%84%E5%BC%8F%E8%B5%8B%E5%80%BC" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>解构式赋值</h2>\n<h3 id="在赋值语句的左式中使用元组、切片或结构体进行匹配赋值。"><a href="#%E5%9C%A8%E8%B5%8B%E5%80%BC%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%B7%A6%E5%BC%8F%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%85%83%E7%BB%84%E3%80%81%E5%88%87%E7%89%87%E6%88%96%E7%BB%93%E6%9E%84%E4%BD%93%E8%BF%9B%E8%A1%8C%E5%8C%B9%E9%85%8D%E8%B5%8B%E5%80%BC%E3%80%82" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>在赋值语句的左式中使用元组、切片或结构体进行匹配赋值。</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="23846840994117580000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let (x, y);\n    (x, ..) = (3, 4);\n    [.., y] = [1, 2];\n    // 填空，让代码工作\n    assert_eq!([x, y], __);\n}`, `23846840994117580000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// 填空，让代码工作</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">,</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-8"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="94597384154925320000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let (x, y);\n    (x, ..) = (3, 4);\n    [.., y] = [1, 2];\n    // 填空，让代码工作\n    assert_eq!([x, y], [3, 2]);\n}`, `94597384154925320000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">..</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// 填空，让代码工作</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id="基本类型"><a href="#%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>基本类型</h1>\n<h2 id="数值类型"><a href="#%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数值类型</h2>\n<h3 id="整数"><a href="#%E6%95%B4%E6%95%B0" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>整数</h3>\n<h4 id="如果我们没有显式的给予变量一个类型，那编译器会自动帮我们推导一个类型"><a href="#%E5%A6%82%E6%9E%9C%E6%88%91%E4%BB%AC%E6%B2%A1%E6%9C%89%E6%98%BE%E5%BC%8F%E7%9A%84%E7%BB%99%E4%BA%88%E5%8F%98%E9%87%8F%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%EF%BC%8C%E9%82%A3%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%9A%E8%87%AA%E5%8A%A8%E5%B8%AE%E6%88%91%E4%BB%AC%E6%8E%A8%E5%AF%BC%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>如果我们没有显式的给予变量一个类型，那编译器会自动帮我们推导一个类型</h4>\n<h5 id="问题一-1"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="58260653925530970000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 移除某个部分让代码工作\nfn main() {\n    let x: i32 = 5;\n    let mut y: u32 = 5;\n\n    y = x;\n\n    let z = 10; // 这里 z 的类型是?\n}`, `58260653925530970000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 移除某个部分让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> y<span class="token punctuation">:</span> u32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n    y <span class="token operator">=</span> x<span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 这里 z 的类型是?</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="我的解答-9"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="57829334686992540000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 移除某个部分让代码工作\nfn main() {\n    let x: i32 = 5;\n    let mut y: u32 = 5;\n\n    // y = x;\n\n    let z = 10; // 这里 z 的类型是?\n}`, `57829334686992540000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 移除某个部分让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> y<span class="token punctuation">:</span> u32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// y = x;</span>\n\n    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 这里 z 的类型是?</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="最佳解答-2"><a href="#%E6%9C%80%E4%BD%B3%E8%A7%A3%E7%AD%94-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>最佳解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="12783001553097150000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x: i32 = 5;\n    let mut y = 5;\n\n    y = x;\n\n    let z = 10; // type of z : i32\n}`, `12783001553097150000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x<span class="token punctuation">:</span> i32 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> y <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n    y <span class="token operator">=</span> x<span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// type of z : i32</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="问题二-1"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="68681962816772880000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nfn main() {\n    let v: u16 = 38_u8 as __;\n}`, `68681962816772880000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v<span class="token punctuation">:</span> u16 <span class="token operator">=</span> <span class="token number">38_u8</span> <span class="token keyword">as</span> __<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="我的解答-10"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-10" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="29118054042068400000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nfn main() {\n    let v: u16 = 38_u8 as u16;\n}`, `29118054042068400000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v<span class="token punctuation">:</span> u16 <span class="token operator">=</span> <span class="token number">38_u8</span> <span class="token keyword">as</span> u16<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="问题三"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="95329417044393250000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`//  修改 \\`assert_eq!\\` 让代码工作\nfn main() {\n    let x = 5;\n    assert_eq!(&quot;u32&quot;.to_string(), type_of(&x));\n}\n\n// 以下函数可以获取传入参数的类型，并返回类型的字符串形式，例如  &quot;i8&quot;, &quot;u8&quot;, &quot;i32&quot;, &quot;u32&quot;\nfn type_of<T>(_: &T) -> String {\n    format!(&quot;{}&quot;, std::any::type_name::<T>())\n}`, `95329417044393250000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">//  修改 `assert_eq!` 让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token string">"u32"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">type_of</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 以下函数可以获取传入参数的类型，并返回类型的字符串形式，例如  "i8", "u8", "i32", "u32"</span>\n<span class="token keyword">fn</span> type_of<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token operator">&amp;</span>T<span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> std<span class="token punctuation">::</span>any<span class="token punctuation">::</span>type_name<span class="token punctuation">::</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="我的解答-11"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-11" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="87107875239355920000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`//  修改 \\`assert_eq!\\` 让代码工作\nfn main() {\n    let x = 5;\n    assert_eq!(&quot;i32&quot;.to_string(), type_of(&x));\n}\n\n// 以下函数可以获取传入参数的类型，并返回类型的字符串形式，例如  &quot;i8&quot;, &quot;u8&quot;, &quot;i32&quot;, &quot;u32&quot;\nfn type_of<T>(_: &T) -> String {\n    format!(&quot;{}&quot;, std::any::type_name::<T>())\n}`, `87107875239355920000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">//  修改 `assert_eq!` 让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token string">"i32"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">type_of</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 以下函数可以获取传入参数的类型，并返回类型的字符串形式，例如  "i8", "u8", "i32", "u32"</span>\n<span class="token keyword">fn</span> type_of<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span>_<span class="token punctuation">:</span> <span class="token operator">&amp;</span>T<span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> std<span class="token punctuation">::</span>any<span class="token punctuation">::</span>type_name<span class="token punctuation">::</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="问题四"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="67825445562046170000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码工作\nfn main() {\n    assert_eq!(i8::MAX, __);\n    assert_eq!(u8::MAX, __);\n}`, `67825445562046170000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>i8<span class="token punctuation">::</span>MAX<span class="token punctuation">,</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>u8<span class="token punctuation">::</span>MAX<span class="token punctuation">,</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="我的解答-12"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-12" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="56994936031366470000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码工作\nfn main() {\n    assert_eq!(i8::MAX, 127);\n    assert_eq!(u8::MAX, 255);\n}`, `56994936031366470000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>i8<span class="token punctuation">::</span>MAX<span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>u8<span class="token punctuation">::</span>MAX<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="问题五"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="42625011595061400000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 解决代码中的错误和 \\`panic\\`\nfn main() {\n   let v1 = 251_u8 + 8;\n   let v2 = i8::checked_add(251, 8).unwrap();\n   println!(&quot;{},{}&quot;,v1,v2);\n}`, `42625011595061400000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 解决代码中的错误和 `panic`</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">let</span> v1 <span class="token operator">=</span> <span class="token number">251_u8</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">;</span>\n   <span class="token keyword">let</span> v2 <span class="token operator">=</span> i8<span class="token punctuation">::</span><span class="token function">checked_add</span><span class="token punctuation">(</span><span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="我的解答-13"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-13" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="93892533455960240000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 解决代码中的错误和 \\`panic\\`\nfn main() {\n    let v1 = 251_u16 + 8;\n    let v2 = i16::checked_add(251, 8).unwrap();\n    println!(&quot;{},{}&quot;, v1, v2);\n}`, `93892533455960240000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 解决代码中的错误和 `panic`</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v1 <span class="token operator">=</span> <span class="token number">251_u16</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> v2 <span class="token operator">=</span> i16<span class="token punctuation">::</span><span class="token function">checked_add</span><span class="token punctuation">(</span><span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="最佳解答-3"><a href="#%E6%9C%80%E4%BD%B3%E8%A7%A3%E7%AD%94-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>最佳解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="53945243847030055000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let v1 = 247_u8 + 8;\n    let v2 = i8::checked_add(119, 8).unwrap();\n    println!(&quot;{},{}&quot;, v1, v2);\n}`, `53945243847030055000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v1 <span class="token operator">=</span> <span class="token number">247_u8</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> v2 <span class="token operator">=</span> i8<span class="token punctuation">::</span><span class="token function">checked_add</span><span class="token punctuation">(</span><span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="问题六"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="83096304492578750000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修改 \\`assert!\\` 让代码工作\nfn main() {\n    let v = 1_024 + 0xff + 0o77 + 0b1111_1111;\n    assert!(v == 1579);\n}`, `83096304492578750000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修改 `assert!` 让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token number">1_024</span> <span class="token operator">+</span> <span class="token number">0xff</span> <span class="token operator">+</span> <span class="token number">0o77</span> <span class="token operator">+</span> <span class="token number">0b1111_1111</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token number">1579</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h6 id="我的解答-14"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-14" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h6>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="16565869871061012000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修改 \\`assert!\\` 让代码工作\nfn main() {\n    let v = 1_024 + 0xff + 0o77 + 0b1111_1111;\n    assert!(v == 1597);\n}`, `16565869871061012000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修改 `assert!` 让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token number">1_024</span> <span class="token operator">+</span> <span class="token number">0xff</span> <span class="token operator">+</span> <span class="token number">0o77</span> <span class="token operator">+</span> <span class="token number">0b1111_1111</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token number">1597</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="浮点数"><a href="#%E6%B5%AE%E7%82%B9%E6%95%B0" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>浮点数</h3>\n<h4 id="问题一-2"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="3402481695845161000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 将 ? 替换成你的答案\nfn main() {\n    let x = 1_000.000_1; // ?\n    let y: f32 = 0.12; // f32\n    let z = 0.01_f64; // f64\n}`, `3402481695845161000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 将 ? 替换成你的答案</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1_000.000_1</span><span class="token punctuation">;</span> <span class="token comment">// ?</span>\n    <span class="token keyword">let</span> y<span class="token punctuation">:</span> f32 <span class="token operator">=</span> <span class="token number">0.12</span><span class="token punctuation">;</span> <span class="token comment">// f32</span>\n    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">0.01_f64</span><span class="token punctuation">;</span> <span class="token comment">// f64</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-15"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-15" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="50995032797309720000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 将 ? 替换成你的答案\nfn main() {\n    let x = 1_000.000_1; // f64\n    let y: f32 = 0.12; // f32\n    let z = 0.01_f64; // f64\n}`, `50995032797309720000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 将 ? 替换成你的答案</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1_000.000_1</span><span class="token punctuation">;</span> <span class="token comment">// f64</span>\n    <span class="token keyword">let</span> y<span class="token punctuation">:</span> f32 <span class="token operator">=</span> <span class="token number">0.12</span><span class="token punctuation">;</span> <span class="token comment">// f32</span>\n    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">0.01_f64</span><span class="token punctuation">;</span> <span class="token comment">// f64</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="问题二-2"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h4>\n<p>使用两种方法来让下面代码工作</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="65821074181981890000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    assert!(0.1 + 0.2 == 0.3);\n}`, `65821074181981890000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">==</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-16"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-16" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="32869092386617238000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    assert!((0.1_f64 + 0.2 - 0.3).abs() < 0.00001);\n}`, `32869092386617238000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.1_f64</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">-</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.00001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="75136602427311130000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    assert!(0.1_f32 + 0.2_f32 == 0.3_f32);\n}`, `75136602427311130000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">0.1_f32</span> <span class="token operator">+</span> <span class="token number">0.2_f32</span> <span class="token operator">==</span> <span class="token number">0.3_f32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<h3 id="序列-range"><a href="#%E5%BA%8F%E5%88%97-range" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>序列 Range</h3>\n<h4 id="问题一-3"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h4>\n<p>两个目标:</p>\n<ol>\n<li>修改 assert! 让它工作</li>\n<li>让 println! 输出: 97 - 122</li>\n</ol>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="4150151007601388000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut sum = 0;\n    for i in -3..2 {\n        sum += i\n    }\n\n    assert!(sum == -3);\n\n    for c in \'a\'..=\'z\' {\n        println!(&quot;{}&quot;, c);\n    }\n}`, `4150151007601388000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">..</span><span class="token number">2</span> <span class="token punctuation">{</span>\n        sum <span class="token operator">+=</span> i\n    <span class="token punctuation">}</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>sum <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token char string">\'a\'</span><span class="token punctuation">..=</span><span class="token char string">\'z\'</span> <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-17"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-17" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="92786936399874950000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut sum = 0;\n    for i in -3..2 {\n        sum += i\n    }\n\n    assert!(sum == -5);\n\n    for c in \'a\'..=\'z\' {\n        println!(&quot;{}&quot;, c);\n    }\n}`, `92786936399874950000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">..</span><span class="token number">2</span> <span class="token punctuation">{</span>\n        sum <span class="token operator">+=</span> i\n    <span class="token punctuation">}</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>sum <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token char string">\'a\'</span><span class="token punctuation">..=</span><span class="token char string">\'z\'</span> <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="最佳解答-4"><a href="#%E6%9C%80%E4%BD%B3%E8%A7%A3%E7%AD%94-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>最佳解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="66796473137287510000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut sum = 0;\n    for i in -3..2 {\n        sum += i\n    }\n\n    assert!(sum == -5);\n\n    for c in \'a\'..=\'z\' {\n        println!(&quot;{}&quot;, c as u8);\n    }\n}`, `66796473137287510000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">..</span><span class="token number">2</span> <span class="token punctuation">{</span>\n        sum <span class="token operator">+=</span> i\n    <span class="token punctuation">}</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>sum <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token char string">\'a\'</span><span class="token punctuation">..=</span><span class="token char string">\'z\'</span> <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> c <span class="token keyword">as</span> u8<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="问题二-3"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="44714723005993525000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nuse std::ops::{Range, RangeInclusive};\nfn main() {\n    assert_eq!((1..__), Range{ start: 1, end: 5 });\n    assert_eq!((1..__), RangeInclusive::new(1, 5));\n}`, `44714723005993525000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">use</span> std<span class="token punctuation">::</span>ops<span class="token punctuation">::</span><span class="token punctuation">{</span>Range<span class="token punctuation">,</span> RangeInclusive<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">..</span>__<span class="token punctuation">)</span><span class="token punctuation">,</span> Range<span class="token punctuation">{</span> start<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">..</span>__<span class="token punctuation">)</span><span class="token punctuation">,</span> RangeInclusive<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-18"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-18" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="89858733307836120000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nuse std::ops::{Range, RangeInclusive};\nfn main() {\n    assert_eq!((1..5), Range { start: 1, end: 5 });\n    assert_eq!((1..=5), RangeInclusive::new(1, 5));\n}`, `89858733307836120000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">use</span> std<span class="token punctuation">::</span>ops<span class="token punctuation">::</span><span class="token punctuation">{</span>Range<span class="token punctuation">,</span> RangeInclusive<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Range <span class="token punctuation">{</span> start<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">..=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RangeInclusive<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="计算"><a href="#%E8%AE%A1%E7%AE%97" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>计算</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="82812376314800460000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，并解决错误\nfn main() {\n    // 整数加法\n    assert!(1u32 + 2 == __);\n\n    // 整数减法\n    assert!(1i32 - 2 == __);\n    assert!(1u8 - 2 == -1);\n\n    assert!(3 * 50 == __);\n\n    assert!(9.6 / 3.2 == 3.0); // error ! 修改它让代码工作\n\n    assert!(24 % 5 == __);\n\n    // 逻辑与或非操作\n    assert!(true && false == __);\n    assert!(true || false == __);\n    assert!(!true == __);\n\n    // 位操作\n    println!(&quot;0011 AND 0101 is {:04b}&quot;, 0b0011u32 & 0b0101);\n    println!(&quot;0011 OR 0101 is {:04b}&quot;, 0b0011u32 | 0b0101);\n    println!(&quot;0011 XOR 0101 is {:04b}&quot;, 0b0011u32 ^ 0b0101);\n    println!(&quot;1 << 5 is {}&quot;, 1u32 << 5);\n    println!(&quot;0x80 >> 2 is 0x{:x}&quot;, 0x80u32 >> 2);\n}`, `82812376314800460000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，并解决错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 整数加法</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">1u32</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 整数减法</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">1i32</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">1u8</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">50</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">9.6</span> <span class="token operator">/</span> <span class="token number">3.2</span> <span class="token operator">==</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error ! 修改它让代码工作</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">24</span> <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 逻辑与或非操作</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token keyword">true</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">false</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token keyword">true</span> <span class="token operator">||</span> <span class="token keyword">false</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">true</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 位操作</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0011 AND 0101 is {:04b}"</span><span class="token punctuation">,</span> <span class="token number">0b0011u32</span> <span class="token operator">&amp;</span> <span class="token number">0b0101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0011 OR 0101 is {:04b}"</span><span class="token punctuation">,</span> <span class="token number">0b0011u32</span> <span class="token operator">|</span> <span class="token number">0b0101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0011 XOR 0101 is {:04b}"</span><span class="token punctuation">,</span> <span class="token number">0b0011u32</span> <span class="token operator">^</span> <span class="token number">0b0101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"1 &lt;&lt; 5 is {}"</span><span class="token punctuation">,</span> <span class="token number">1u32</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0x80 >> 2 is 0x{:x}"</span><span class="token punctuation">,</span> <span class="token number">0x80u32</span> <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-19"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-19" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="69323280258771255000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，并解决错误\nfn main() {\n    // 整数加法\n    assert!(1u32 + 2 == 3);\n\n    // 整数减法\n    assert!(1i32 - 2 == -1);\n    assert!(1i8 - 2 == -1);\n\n    assert!(3 * 50 == 150);\n\n    assert!(9.6_f32 / 3.2_f32 == 3.0_f32); // error ! 修改它让代码工作\n\n    assert!(24 % 5 == 4);\n\n    // 逻辑与或非操作\n    assert!(true && false == false);\n    assert!(true || false == true);\n    assert!(!true == false);\n\n    // 位操作\n    println!(&quot;0011 AND 0101 is {:04b}&quot;, 0b0011u32 & 0b0101);\n    println!(&quot;0011 OR 0101 is {:04b}&quot;, 0b0011u32 | 0b0101);\n    println!(&quot;0011 XOR 0101 is {:04b}&quot;, 0b0011u32 ^ 0b0101);\n    println!(&quot;1 << 5 is {}&quot;, 1u32 << 5);\n    println!(&quot;0x80 >> 2 is 0x{:x}&quot;, 0x80u32 >> 2);\n}`, `69323280258771255000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，并解决错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 整数加法</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">1u32</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 整数减法</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">1i32</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">1i8</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">50</span> <span class="token operator">==</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">9.6_f32</span> <span class="token operator">/</span> <span class="token number">3.2_f32</span> <span class="token operator">==</span> <span class="token number">3.0_f32</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error ! 修改它让代码工作</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token number">24</span> <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 逻辑与或非操作</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token keyword">true</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">false</span> <span class="token operator">==</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token keyword">true</span> <span class="token operator">||</span> <span class="token keyword">false</span> <span class="token operator">==</span> <span class="token keyword">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">true</span> <span class="token operator">==</span> <span class="token keyword">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 位操作</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0011 AND 0101 is {:04b}"</span><span class="token punctuation">,</span> <span class="token number">0b0011u32</span> <span class="token operator">&amp;</span> <span class="token number">0b0101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0011 OR 0101 is {:04b}"</span><span class="token punctuation">,</span> <span class="token number">0b0011u32</span> <span class="token operator">|</span> <span class="token number">0b0101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0011 XOR 0101 is {:04b}"</span><span class="token punctuation">,</span> <span class="token number">0b0011u32</span> <span class="token operator">^</span> <span class="token number">0b0101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"1 &lt;&lt; 5 is {}"</span><span class="token punctuation">,</span> <span class="token number">1u32</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"0x80 >> 2 is 0x{:x}"</span><span class="token punctuation">,</span> <span class="token number">0x80u32</span> <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="字符、布尔、单元类型"><a href="#%E5%AD%97%E7%AC%A6%E3%80%81%E5%B8%83%E5%B0%94%E3%80%81%E5%8D%95%E5%85%83%E7%B1%BB%E5%9E%8B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>字符、布尔、单元类型</h2>\n<h3 id="字符"><a href="#%E5%AD%97%E7%AC%A6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>字符</h3>\n<h4 id="问题一-4"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="31269020171117613000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`//  修改 2 处 \\`assert_eq!\\` 让代码工作\n\nuse std::mem::size_of_val;\nfn main() {\n    let c1 = \'a\';\n    assert_eq!(size_of_val(&c1), 1);\n\n    let c2 = \'中\';\n    assert_eq!(size_of_val(&c2), 3);\n\n    println!(&quot;Success!&quot;)\n}`, `31269020171117613000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">//  修改 2 处 `assert_eq!` 让代码工作</span>\n\n<span class="token keyword">use</span> std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span>size_of_val<span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> c1 <span class="token operator">=</span> <span class="token char string">\'a\'</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> c2 <span class="token operator">=</span> <span class="token char string">\'中\'</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-20"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-20" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="89744381288818870000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修改 2 处 \\`assert_eq!\\` 让代码工作\n\nuse std::mem::size_of_val;\nfn main() {\n    let c1 = \'a\';\n    assert_eq!(size_of_val(&c1), 4);\n\n    let c2 = \'中\';\n    assert_eq!(size_of_val(&c2), 4);\n\n    println!(&quot;Success!&quot;)\n}`, `89744381288818870000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修改 2 处 `assert_eq!` 让代码工作</span>\n\n<span class="token keyword">use</span> std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span>size_of_val<span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> c1 <span class="token operator">=</span> <span class="token char string">\'a\'</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> c2 <span class="token operator">=</span> <span class="token char string">\'中\'</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="问题二-4"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="20555372438816575000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修改一行让代码正常打印\nfn main() {\n    let c1 = &quot;中&quot;;\n    print_char(c1);\n}\n\nfn print_char(c : char) {\n    println!(&quot;{}&quot;, c);\n}`, `20555372438816575000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修改一行让代码正常打印</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> c1 <span class="token operator">=</span> <span class="token string">"中"</span><span class="token punctuation">;</span>\n    <span class="token function">print_char</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">print_char</span><span class="token punctuation">(</span>c <span class="token punctuation">:</span> char<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-21"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-21" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="1319547994257086500"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修改一行让代码正常打印\nfn main() {\n    let c1 = \'中\';\n    print_char(c1);\n}\n\nfn print_char(c: char) {\n    println!(&quot;{}&quot;, c);\n}`, `1319547994257086500`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修改一行让代码正常打印</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> c1 <span class="token operator">=</span> <span class="token char string">\'中\'</span><span class="token punctuation">;</span>\n    <span class="token function">print_char</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">print_char</span><span class="token punctuation">(</span>c<span class="token punctuation">:</span> char<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="布尔"><a href="#%E5%B8%83%E5%B0%94" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>布尔</h3>\n<h4 id="问题一-5"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-5" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="6213679735614797000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 使成功打印\nfn main() {\n    let _f: bool = false;\n\n    let t = true;\n    if !t {\n        println!(&quot;Success!&quot;)\n    }\n}`, `6213679735614797000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 使成功打印</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _f<span class="token punctuation">:</span> bool <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token operator">!</span>t <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-22"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-22" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="5422855601588794000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 使成功打印\nfn main() {\n    let _f: bool = false;\n\n    let t = true;\n    if t {\n        println!(&quot;Success!&quot;)\n    }\n}`, `5422855601588794000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 使成功打印</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _f<span class="token punctuation">:</span> bool <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> t <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="问题二-5"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-5" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="68466099427193190000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let f = true;\n    let t = true && false;\n    assert_eq!(t, f);\n\n    println!(&quot;Success!&quot;)\n}`, `68466099427193190000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">false</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-23"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-23" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="46537900111034360000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let f = true;\n    let t = true && false;\n    assert_eq!(t, !f);\n\n    println!(&quot;Success!&quot;)\n}`, `46537900111034360000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">false</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token operator">!</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="单元类型"><a href="#%E5%8D%95%E5%85%83%E7%B1%BB%E5%9E%8B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>单元类型</h3>\n<h4 id="问题一-6"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="43100060673635970000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 让代码工作，但不要修改 \\`implicitly_ret_unit\\` !\nfn main() {\n    let _v: () = ();\n\n    let v = (2, 3);\n    assert_eq!(v, implicitly_ret_unit());\n\n    println!(&quot;Success!&quot;)\n}\n\nfn implicitly_ret_unit() {\n    println!(&quot;I will return a ()&quot;)\n}\n\n// 不要使用下面的函数，它只用于演示！\nfn explicitly_ret_unit() -> () {\n    println!(&quot;I will return a ()&quot;)\n}`, `43100060673635970000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 让代码工作，但不要修改 `implicitly_ret_unit` !</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _v<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token function">implicitly_ret_unit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">implicitly_ret_unit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"I will return a ()"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 不要使用下面的函数，它只用于演示！</span>\n<span class="token keyword">fn</span> <span class="token function">explicitly_ret_unit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"I will return a ()"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-24"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-24" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="48593383773305290000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 让代码工作，但不要修改 \\`implicitly_ret_unit\\` !\nfn main() {\n    let _v: () = ();\n\n    let v = ();\n    assert_eq!(v, implicitly_ret_unit());\n\n    println!(&quot;Success!&quot;)\n}\n\nfn implicitly_ret_unit() {\n    println!(&quot;I will return a ()&quot;)\n}\n\n// 不要使用下面的函数，它只用于演示！\nfn explicitly_ret_unit() -> () {\n    println!(&quot;I will return a ()&quot;)\n}`, `48593383773305290000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 让代码工作，但不要修改 `implicitly_ret_unit` !</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _v<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token function">implicitly_ret_unit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">implicitly_ret_unit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"I will return a ()"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 不要使用下面的函数，它只用于演示！</span>\n<span class="token keyword">fn</span> <span class="token function">explicitly_ret_unit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"I will return a ()"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="问题二-6"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h4>\n<p>单元类型占用的内存大小是多少？</p>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="76595441624350590000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 让代码工作：修改 \\`assert!\\` 中的 \\`4\\`\nuse std::mem::size_of_val;\nfn main() {\n    let unit: () = ();\n    assert!(size_of_val(&unit) == 4);\n\n    println!(&quot;Success!&quot;)\n}`, `76595441624350590000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 让代码工作：修改 `assert!` 中的 `4`</span>\n<span class="token keyword">use</span> std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span>size_of_val<span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> unit<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unit<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id="我的解答-25"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-25" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h5>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="65332664625967096000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 让代码工作：修改 \\`assert!\\` 中的 \\`4\\`\nuse std::mem::size_of_val;\nfn main() {\n    let unit: () = ();\n    assert!(size_of_val(&unit) == 0);\n\n    println!(&quot;Success!&quot;)\n}`, `65332664625967096000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 让代码工作：修改 `assert!` 中的 `4`</span>\n<span class="token keyword">use</span> std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span>size_of_val<span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> unit<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unit<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="语句与表达式"><a href="#%E8%AF%AD%E5%8F%A5%E4%B8%8E%E8%A1%A8%E8%BE%BE%E5%BC%8F" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>语句与表达式</h2>\n<h3 id="问题一-7"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="93473933922678950000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 使用两种方法让代码工作起来\nfn main() {\n    let v = {\n        let mut x = 1;\n        x += 2\n    };\n\n    assert_eq!(v, 3);\n}`, `93473933922678950000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 使用两种方法让代码工作起来</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        x <span class="token operator">+=</span> <span class="token number">2</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-26"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-26" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="78117579126745460000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let v = {\n        let mut x = 1;\n        x += 2\n    };\n\n    assert_eq!(v, ());\n}`, `78117579126745460000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        x <span class="token operator">+=</span> <span class="token number">2</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="10660878010494245000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let v = {\n        let mut x = 1;\n        x += 2;\n        x\n    };\n\n    assert_eq!(v, 3);\n}`, `10660878010494245000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        x <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n        x\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-7"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="57767489307650060000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let v = (let x = 3);\n\n    assert!(v == 3);\n}`, `57767489307650060000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-27"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-27" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="92364543110751880000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let v = {\n        let x = 3;\n        x\n    };\n\n    assert!(v == 3);\n}`, `92364543110751880000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n        x\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-1"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="10017004597524482000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = sum(1, 2);\n    assert_eq!(s, 3);\n}\n\nfn sum(x: i32, y: i32) -> i32 {\n    x + y;\n}`, `10017004597524482000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32<span class="token punctuation">)</span> <span class="token punctuation">-></span> i32 <span class="token punctuation">{</span>\n    x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-28"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-28" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="75460758380667040000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = sum(1, 2);\n    assert_eq!(s, 3);\n}\n\nfn sum(x: i32, y: i32) -> i32 {\n    x + y\n}`, `75460758380667040000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32<span class="token punctuation">)</span> <span class="token punctuation">-></span> i32 <span class="token punctuation">{</span>\n    x <span class="token operator">+</span> y\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="函数"><a href="#%E5%87%BD%E6%95%B0" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>函数</h2>\n<h3 id="问题一-8"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="97687162597922400000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 不要修改下面两行代码!\n    let (x, y) = (1, 2);\n    let s = sum(x, y);\n\n    assert_eq!(s, 3);\n}\n\nfn sum(x, y: i32) {\n    x + y;\n}`, `97687162597922400000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 不要修改下面两行代码!</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    x <span class="token operator">+</span> y<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-29"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-29" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="17011392630451660000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let (x, y) = (1, 2);\n    let s = sum(x, y);\n\n    assert_eq!(s, 3);\n}\n\nfn sum(x: i32, y: i32) -> i32 {\n    x + y\n}`, `17011392630451660000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">sum</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32<span class="token punctuation">)</span> <span class="token punctuation">-></span> i32 <span class="token punctuation">{</span>\n    x <span class="token operator">+</span> y\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-8"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="60643904465663410000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    print();\n}\n\n// 使用另一个类型来替代 i32\nfn print() -> i32 {\n    println!(&quot;hello,world&quot;);\n}`, `60643904465663410000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 使用另一个类型来替代 i32</span>\n<span class="token keyword">fn</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> i32 <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"hello,world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-30"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-30" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="70415743719881530000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    print();\n}\n\nfn print() -> () {\n    println!(&quot;hello,world&quot;);\n}`, `70415743719881530000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"hello,world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-2"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="46688093376435890000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 用两种方法求解\nfn main() {\n    never_return();\n}\n\nfn never_return() -> ! {\n    // 实现这个函数，不要修改函数签名!\n}`, `46688093376435890000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 用两种方法求解</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">never_return</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">never_return</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">!</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 实现这个函数，不要修改函数签名!</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-31"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-31" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="60664357025510810000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    never_return();\n}\n\nfn never_return() -> ! {\n    loop {}\n}`, `60664357025510810000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">never_return</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">never_return</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">!</span> <span class="token punctuation">{</span>\n    <span class="token keyword">loop</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="39418479987199520000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    never_return();\n}\n\nfn never_return() -> ! {\n    panic!(&quot;error&quot;)\n}`, `39418479987199520000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">never_return</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">never_return</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">!</span> <span class="token punctuation">{</span>\n    <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-1"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="5861145046559102000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    println!(&quot;Success!&quot;);\n}\n\nfn get_option(tp: u8) -> Option<i32> {\n    match tp {\n        1 => {\n            // TODO\n        }\n        _ => {\n            // TODO\n        }\n    };\n\n    // 这里与其返回一个 None，不如使用发散函数替代\n    never_return_fn()\n}\n\n// 使用三种方法实现以下发散函数\nfn never_return_fn() -> ! {}`, `5861145046559102000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">get_option</span><span class="token punctuation">(</span>tp<span class="token punctuation">:</span> u8<span class="token punctuation">)</span> <span class="token punctuation">-></span> Option<span class="token operator">&lt;</span>i32<span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">match</span> tp <span class="token punctuation">{</span>\n        <span class="token number">1</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// TODO</span>\n        <span class="token punctuation">}</span>\n        _ <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// TODO</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 这里与其返回一个 None，不如使用发散函数替代</span>\n    <span class="token function">never_return_fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 使用三种方法实现以下发散函数</span>\n<span class="token keyword">fn</span> <span class="token function">never_return_fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">!</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-32"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-32" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="97088764195372100000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn never_return_fn() -> ! {\n    panic!()\n}`, `97088764195372100000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">never_return_fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">!</span> <span class="token punctuation">{</span>\n    <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="67373040434416480000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn never_return_fn() -> ! {\n    todo!();\n}`, `67373040434416480000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">never_return_fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">!</span> <span class="token punctuation">{</span>\n    <span class="token function">todo!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="76098717121490800000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn never_return_fn() -> ! {\n    loop {\n        std::thread::sleep(std::time::Duration::from_secs(1))\n    }\n}`, `76098717121490800000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">never_return_fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">!</span> <span class="token punctuation">{</span>\n    <span class="token keyword">loop</span> <span class="token punctuation">{</span>\n        std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span><span class="token function">sleep</span><span class="token punctuation">(</span>std<span class="token punctuation">::</span>time<span class="token punctuation">::</span>Duration<span class="token punctuation">::</span><span class="token function">from_secs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-1"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="85934445210260620000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 填空\n    let b = __;\n\n    let _v = match b {\n        true => 1,\n        // 发散函数也可以用于 \\`match\\` 表达式，用于替代任何类型的值\n        false => {\n            println!(&quot;Success!&quot;);\n            panic!(&quot;we have no value for \\`false\\`, but we can panic&quot;)\n        }\n    };\n\n    println!(&quot;Exercise Failed if printing out this line!&quot;);\n}`, `85934445210260620000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 填空</span>\n    <span class="token keyword">let</span> b <span class="token operator">=</span> __<span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> _v <span class="token operator">=</span> <span class="token keyword">match</span> b <span class="token punctuation">{</span>\n        <span class="token keyword">true</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token comment">// 发散函数也可以用于 `match` 表达式，用于替代任何类型的值</span>\n        <span class="token keyword">false</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token string">"we have no value for `false`, but we can panic"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Exercise Failed if printing out this line!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-33"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-33" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="58242374303543600000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let b = false;\n\n    let _v = match b {\n        true => 1,\n        // 发散函数也可以用于 \\`match\\` 表达式，用于替代任何类型的值\n        false => {\n            println!(&quot;Success!&quot;);\n            panic!(&quot;we have no value for \\`false\\`, but we can panic&quot;)\n        }\n    };\n\n    println!(&quot;Exercise Failed if printing out this line!&quot;);\n}`, `58242374303543600000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">false</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> _v <span class="token operator">=</span> <span class="token keyword">match</span> b <span class="token punctuation">{</span>\n        <span class="token keyword">true</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token comment">// 发散函数也可以用于 `match` 表达式，用于替代任何类型的值</span>\n        <span class="token keyword">false</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Success!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token string">"we have no value for `false`, but we can panic"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Exercise Failed if printing out this line!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id="所有权与借用"><a href="#%E6%89%80%E6%9C%89%E6%9D%83%E4%B8%8E%E5%80%9F%E7%94%A8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>所有权与借用</h1>\n<h2 id="所有权"><a href="#%E6%89%80%E6%9C%89%E6%9D%83" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>所有权</h2>\n<h3 id="问题一-9"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="61734561668242420000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 使用尽可能多的方法来通过编译\n    let x = String::from(&quot;hello, world&quot;);\n    let y = x;\n    println!(&quot;{},{}&quot;, x, y);\n}`, `61734561668242420000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用尽可能多的方法来通过编译</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-34"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-34" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="79693904536329910000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = String::from(&quot;hello, world&quot;);\n    let y = x.clone();\n    println!(&quot;{},{}&quot;, x, y);\n}`, `79693904536329910000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="73580781193839460000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = String::from(&quot;hello, world&quot;);\n    let y = &x;\n    println!(&quot;{},{}&quot;, x, y);\n}`, `73580781193839460000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token operator">&amp;</span>x<span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="52874522427730050000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = &quot;hello, world&quot;;\n    let y = x;\n    println!(&quot;{},{}&quot;, x, y);\n}`, `52874522427730050000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="99155388111303880000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = String::from(&quot;hello, world&quot;);\n    let y = x.as_str();\n    println!(&quot;{},{}&quot;, x, y);\n}`, `99155388111303880000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">as_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{},{}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-9"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="59565009654840170000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 不要修改 main 中的代码\nfn main() {\n    let s1 = String::from(&quot;hello, world&quot;);\n    let s2 = take_ownership(s1);\n\n    println!(&quot;{}&quot;, s2);\n}\n\n// 只能修改下面的代码!\nfn take_ownership(s: String) {\n    println!(&quot;{}&quot;, s);\n}`, `59565009654840170000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 不要修改 main 中的代码</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">take_ownership</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 只能修改下面的代码!</span>\n<span class="token keyword">fn</span> <span class="token function">take_ownership</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-35"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-35" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="31431000585295733000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s1 = String::from(&quot;hello, world&quot;);\n    let s2 = take_ownership(s1);\n\n    println!(&quot;{}&quot;, s2);\n}\n\nfn take_ownership(s: String) -> String {\n    println!(&quot;{}&quot;, s);\n    s\n}`, `31431000585295733000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">take_ownership</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">take_ownership</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-3"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="69423069397302714000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = give_ownership();\n    println!(&quot;{}&quot;, s);\n}\n\n// 只能修改下面的代码!\nfn give_ownership() -> String {\n    let s = String::from(&quot;hello, world&quot;);\n    // convert String to Vec\n    // 将 String 转换成 Vec 类型\n    let _s = s.into_bytes();\n    s\n}`, `69423069397302714000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">give_ownership</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 只能修改下面的代码!</span>\n<span class="token keyword">fn</span> <span class="token function">give_ownership</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// convert String to Vec</span>\n    <span class="token comment">// 将 String 转换成 Vec 类型</span>\n    <span class="token keyword">let</span> _s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">into_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-36"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-36" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="5206307054464499000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = give_ownership();\n    println!(&quot;{}&quot;, s);\n}\n\nfn give_ownership() -> String {\n    let s = String::from(&quot;hello, world&quot;);\n    // convert String to Vec\n    // 将 String 转换成 Vec 类型\n    let _s = s.as_bytes();\n    s\n}`, `5206307054464499000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">give_ownership</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">give_ownership</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// convert String to Vec</span>\n    <span class="token comment">// 将 String 转换成 Vec 类型</span>\n    <span class="token keyword">let</span> _s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="33072448122804610000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = give_ownership();\n    println!(&quot;{}&quot;, s);\n}\n\n// Only modify the code below!\nfn give_ownership() -> String {\n    let s = String::from(&quot;hello, world&quot;);\n    s\n}`, `33072448122804610000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">give_ownership</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Only modify the code below!</span>\n<span class="token keyword">fn</span> <span class="token function">give_ownership</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-2"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="59705951056879660000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误，不要删除任何代码行\nfn main() {\n    let s = String::from(&quot;hello, world&quot;);\n\n    print_str(s);\n\n    println!(&quot;{}&quot;, s);\n}\n\nfn print_str(s: String)  {\n    println!(&quot;{}&quot;,s)\n}`, `59705951056879660000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误，不要删除任何代码行</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">print_str</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">print_str</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> String<span class="token punctuation">)</span>  <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-37"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-37" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="5169667792353572000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;hello, world&quot;);\n\n    print_str(&s);\n\n    println!(&quot;{}&quot;, s);\n}\n\nfn print_str(s: &String) {\n    println!(&quot;{}&quot;, s)\n}`, `5169667792353572000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">print_str</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">print_str</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>String<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="62831231274084700000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;hello, world&quot;);\n\n    print_str(s.clone());\n\n    println!(&quot;{}&quot;, s);\n}\n\nfn print_str(s: String)  {\n    println!(&quot;{}&quot;,s)\n}`, `62831231274084700000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">print_str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">print_str</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> String<span class="token punctuation">)</span>  <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-2"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="17353915683655540000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 不要使用 clone，使用 copy 的方式替代\nfn main() {\n    let x = (1, 2, (), &quot;hello&quot;.to_string());\n    let y = x.clone();\n    println!(&quot;{:?}, {:?}&quot;, x, y);\n}`, `17353915683655540000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 不要使用 clone，使用 copy 的方式替代</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:?}, {:?}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-38"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-38" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="14557061333514200000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = (1, 2, (), &quot;hello&quot;);\n    let y = x;\n    println!(&quot;{:?}, {:?}&quot;, x, y);\n}`, `14557061333514200000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:?}, {:?}"</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-1"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="95545637788239530000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;hello, &quot;);\n\n    // 只修改下面这行代码 !\n    let s1 = s;\n\n    s1.push_str(&quot;world&quot;)\n}`, `95545637788239530000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 只修改下面这行代码 !</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> s<span class="token punctuation">;</span>\n\n    s1<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-39"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-39" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="16104969840028449000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;hello, &quot;);\n\n    let mut s1 = s;\n\n    s1.push_str(&quot;world&quot;)\n}`, `16104969840028449000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s1 <span class="token operator">=</span> s<span class="token punctuation">;</span>\n\n    s1<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题七"><a href="#%E9%97%AE%E9%A2%98%E4%B8%83" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题七</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="84327681702381810000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = Box::new(5);\n\n    let ...      // 完成该行代码，不要修改其它行！\n\n    *y = 4;\n\n    assert_eq!(*x, 5);\n}`, `84327681702381810000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> Box<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> <span class="token punctuation">...</span>      <span class="token comment">// 完成该行代码，不要修改其它行！</span>\n\n    <span class="token operator">*</span>y <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token operator">*</span>x<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-40"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-40" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="51554370966504920000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = Box::new(5);\n\n    let mut y = Box::new(1);    // 完成该行代码，不要修改其它行！\n\n    *y = 4;\n\n    assert_eq!(*x, 5);\n}`, `51554370966504920000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> Box<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> y <span class="token operator">=</span> Box<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 完成该行代码，不要修改其它行！</span>\n\n    <span class="token operator">*</span>y <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token operator">*</span>x<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题八"><a href="#%E9%97%AE%E9%A2%98%E5%85%AB" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题八</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="19877510840591350000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n   let t = (String::from(&quot;hello&quot;), String::from(&quot;world&quot;));\n\n   let _s = t.0;\n\n   // 仅修改下面这行代码，且不要使用 \\`_s\\`\n   println!(&quot;{:?}&quot;, t);\n}`, `19877510840591350000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n   <span class="token keyword">let</span> _s <span class="token operator">=</span> t<span class="token number">.0</span><span class="token punctuation">;</span>\n\n   <span class="token comment">// 仅修改下面这行代码，且不要使用 `_s`</span>\n   <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:?}"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-41"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-41" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="57605917656308670000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let t = (String::from(&quot;hello&quot;), String::from(&quot;world&quot;));\n\n    let _s = t.0;\n\n    println!(&quot;{:?}&quot;, t.1);\n}`, `57605917656308670000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> _s <span class="token operator">=</span> t<span class="token number">.0</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:?}"</span><span class="token punctuation">,</span> t<span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题九"><a href="#%E9%97%AE%E9%A2%98%E4%B9%9D" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题九</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="56779571541392950000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n   let t = (String::from(&quot;hello&quot;), String::from(&quot;world&quot;));\n\n   // 填空，不要修改其它代码\n   let (__, __) = __;\n\n   println!(&quot;{:?}, {:?}, {:?}&quot;, s1, s2, t); // -> &quot;hello&quot;, &quot;world&quot;, (&quot;hello&quot;, &quot;world&quot;)\n}`, `56779571541392950000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n   <span class="token comment">// 填空，不要修改其它代码</span>\n   <span class="token keyword">let</span> <span class="token punctuation">(</span>__<span class="token punctuation">,</span> __<span class="token punctuation">)</span> <span class="token operator">=</span> __<span class="token punctuation">;</span>\n\n   <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:?}, {:?}, {:?}"</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -> "hello", "world", ("hello", "world")</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-42"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-42" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="59568256508867500000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let t = (String::from(&quot;hello&quot;), String::from(&quot;world&quot;));\n\n    // 填空，不要修改其它代码\n    let (ref s1, ref s2) = t;\n\n    println!(&quot;{:?}, {:?}, {:?}&quot;, s1, s2, t); // -> &quot;hello&quot;, &quot;world&quot;, (&quot;hello&quot;, &quot;world&quot;)\n}`, `59568256508867500000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空，不要修改其它代码</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token keyword">ref</span> s1<span class="token punctuation">,</span> <span class="token keyword">ref</span> s2<span class="token punctuation">)</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:?}, {:?}, {:?}"</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -> "hello", "world", ("hello", "world")</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="80955795019486130000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let t = (String::from(&quot;hello&quot;), String::from(&quot;world&quot;));\n\n    // 填空，不要修改其它代码\n    let (ref s1, ref s2) = t.clone();\n\n    println!(&quot;{:?}, {:?}, {:?}&quot;, s1, s2, t); // -> &quot;hello&quot;, &quot;world&quot;, (&quot;hello&quot;, &quot;world&quot;)\n}`, `80955795019486130000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空，不要修改其它代码</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token keyword">ref</span> s1<span class="token punctuation">,</span> <span class="token keyword">ref</span> s2<span class="token punctuation">)</span> <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:?}, {:?}, {:?}"</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -> "hello", "world", ("hello", "world")</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="引用与借用"><a href="#%E5%BC%95%E7%94%A8%E4%B8%8E%E5%80%9F%E7%94%A8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>引用与借用</h2>\n<h3 id="问题一-10"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-10" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="76030237271157600000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n   let x = 5;\n   // 填写空白处\n   let p = __;\n\n   println!(&quot;x 的内存地址是 {:p}&quot;, p); // output: 0x16fa3ac84\n}`, `76030237271157600000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n   <span class="token comment">// 填写空白处</span>\n   <span class="token keyword">let</span> p <span class="token operator">=</span> __<span class="token punctuation">;</span>\n\n   <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x 的内存地址是 {:p}"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// output: 0x16fa3ac84</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-43"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-43" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="24159863997922290000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = 5;\n    // 填写空白处\n    let p = &x;\n\n    println!(&quot;x 的内存地址是 {:p}&quot;, p); // output: 0x16fa3ac84\n}`, `24159863997922290000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token comment">// 填写空白处</span>\n    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span>x<span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x 的内存地址是 {:p}"</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// output: 0x16fa3ac84</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-10"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-10" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="18739721520889850000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = 5;\n    let y = &x;\n\n    // 只能修改以下行\n    assert_eq!(5, y);\n}`, `18739721520889850000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token operator">&amp;</span>x<span class="token punctuation">;</span>\n\n    <span class="token comment">// 只能修改以下行</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-44"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-44" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="40837174781060130000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let x = 5;\n    let y = &x;\n\n    // 只能修改以下行\n    assert_eq!(5, *y);\n}`, `40837174781060130000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token operator">&amp;</span>x<span class="token punctuation">;</span>\n\n    <span class="token comment">// 只能修改以下行</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">*</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-4"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="53368959577919960000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nfn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    borrow_object(s)\n}\n\nfn borrow_object(s: &String) {}`, `53368959577919960000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">borrow_object</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">borrow_object</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>String<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-45"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-45" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="54555257069226280000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nfn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    borrow_object(&s)\n}\n\nfn borrow_object(s: &String) {}`, `54555257069226280000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">borrow_object</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">borrow_object</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>String<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-3"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="27224823526287544000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nfn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    push_str(s)\n}\n\nfn push_str(s: &mut String) {\n    s.push_str(&quot;world&quot;)\n}`, `27224823526287544000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">push_str</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">push_str</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    s<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-46"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-46" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="68214774225001040000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nfn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    push_str(&mut s)\n}\n\nfn push_str(s: &mut String) {\n    s.push_str(&quot;world&quot;)\n}`, `68214774225001040000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">push_str</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">push_str</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    s<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-3"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="31348885385288684000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    // 填写空白处，让代码工作\n    let p = __;\n\n    p.push_str(&quot;world&quot;);\n}`, `31348885385288684000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填写空白处，让代码工作</span>\n    <span class="token keyword">let</span> p <span class="token operator">=</span> __<span class="token punctuation">;</span>\n\n    p<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-47"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-47" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="18579858174249607000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    // 填写空白处，让代码工作\n    let p = &mut s;\n\n    p.push_str(&quot;world&quot;);\n}`, `18579858174249607000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填写空白处，让代码工作</span>\n    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n\n    p<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-2"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="52173278106489150000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let c = \'中\';\n\n    let r1 = &c;\n    // 填写空白处，但是不要修改其它行的代码\n    let __ r2 = c;\n\n    assert_eq!(*r1, *r2);\n\n    // 判断两个内存地址的字符串是否相等\n    assert_eq!(get_addr(r1),get_addr(r2));\n}\n\n// 获取传入引用的内存地址的字符串形式\nfn get_addr(r: &char) -> String {\n    format!(&quot;{:p}&quot;, r)\n}`, `52173278106489150000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token char string">\'中\'</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>c<span class="token punctuation">;</span>\n    <span class="token comment">// 填写空白处，但是不要修改其它行的代码</span>\n    <span class="token keyword">let</span> __ r2 <span class="token operator">=</span> c<span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token operator">*</span>r1<span class="token punctuation">,</span> <span class="token operator">*</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 判断两个内存地址的字符串是否相等</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token function">get_addr</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">get_addr</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 获取传入引用的内存地址的字符串形式</span>\n<span class="token keyword">fn</span> <span class="token function">get_addr</span><span class="token punctuation">(</span>r<span class="token punctuation">:</span> <span class="token operator">&amp;</span>char<span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"{:p}"</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-48"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-48" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="24678016611708297000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let c = \'中\';\n\n    let r1 = &c;\n    // 填写空白处，但是不要修改其它行的代码\n    let ref r2 = c;\n\n    assert_eq!(*r1, *r2);\n\n    // 判断两个内存地址的字符串是否相等\n    assert_eq!(get_addr(r1), get_addr(r2));\n}\n\n// 获取传入引用的内存地址的字符串形式\nfn get_addr(r: &char) -> String {\n    format!(&quot;{:p}&quot;, r)\n}`, `24678016611708297000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token char string">\'中\'</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>c<span class="token punctuation">;</span>\n    <span class="token comment">// 填写空白处，但是不要修改其它行的代码</span>\n    <span class="token keyword">let</span> <span class="token keyword">ref</span> r2 <span class="token operator">=</span> c<span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token operator">*</span>r1<span class="token punctuation">,</span> <span class="token operator">*</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 判断两个内存地址的字符串是否相等</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span><span class="token function">get_addr</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">get_addr</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 获取传入引用的内存地址的字符串形式</span>\n<span class="token keyword">fn</span> <span class="token function">get_addr</span><span class="token punctuation">(</span>r<span class="token punctuation">:</span> <span class="token operator">&amp;</span>char<span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n    <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"{:p}"</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题七-1"><a href="#%E9%97%AE%E9%A2%98%E4%B8%83-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题七</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="31537752630372217000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 移除代码某个部分，让它工作\n// 你不能移除整行的代码！\nfn main() {\n    let mut s = String::from(&quot;hello&quot;);\n\n    let r1 = &mut s;\n    let r2 = &mut s;\n\n    println!(&quot;{}, {}&quot;, r1, r2);\n}`, `31537752630372217000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 移除代码某个部分，让它工作</span>\n<span class="token comment">// 你不能移除整行的代码！</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}, {}"</span><span class="token punctuation">,</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-49"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-49" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="17989419784027083000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 移除代码某个部分，让它工作\n// 你不能移除整行的代码！\nfn main() {\n    let mut s = String::from(&quot;hello&quot;);\n\n    let r1 = &s;\n    let r2 = &s;\n\n    println!(&quot;{}, {}&quot;, r1, r2);\n}`, `17989419784027083000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 移除代码某个部分，让它工作</span>\n<span class="token comment">// 你不能移除整行的代码！</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}, {}"</span><span class="token punctuation">,</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题八-1"><a href="#%E9%97%AE%E9%A2%98%E5%85%AB-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题八</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="2446337133381915000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 通过修改下面一行代码来修复错误\n    let s = String::from(&quot;hello, &quot;);\n\n    borrow_object(&mut s)\n}\n\nfn borrow_object(s: &mut String) {}`, `2446337133381915000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 通过修改下面一行代码来修复错误</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">borrow_object</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">borrow_object</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-50"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-50" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="42583732834478290000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 通过修改下面一行代码来修复错误\n    let mut s = String::from(&quot;hello, &quot;);\n\n    borrow_object(&mut s)\n}\n\nfn borrow_object(s: &mut String) {}`, `42583732834478290000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 通过修改下面一行代码来修复错误</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">borrow_object</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">borrow_object</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题九-1"><a href="#%E9%97%AE%E9%A2%98%E4%B9%9D-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题九</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="56388282899904720000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 注释掉一行代码让它工作\nfn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    let r1 = &mut s;\n    r1.push_str(&quot;world&quot;);\n    let r2 = &mut s;\n    r2.push_str(&quot;!&quot;);\n\n    println!(&quot;{}&quot;,r1);\n}`, `56388282899904720000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 注释掉一行代码让它工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n    r1<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n    r2<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span>r1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-51"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-51" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="8334886161989297000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 注释掉一行代码让它工作\nfn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    let r1 = &mut s;\n    r1.push_str(&quot;world&quot;);\n    let r2 = &mut s;\n    r2.push_str(&quot;!&quot;);\n\n    // println!(&quot;{}&quot;,r1);\n}`, `8334886161989297000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 注释掉一行代码让它工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n    r1<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n    r2<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// println!("{}",r1);</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题十"><a href="#%E9%97%AE%E9%A2%98%E5%8D%81" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题十</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="43944810925877880000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    let r1 = &mut s;\n    let r2 = &mut s;\n\n    // 在下面增加一行代码人为制造编译错误：cannot borrow \\`s\\` as mutable more than once at a time\n    // 你不能同时使用 r1 和 r2\n}`, `43944810925877880000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n\n    <span class="token comment">// 在下面增加一行代码人为制造编译错误：cannot borrow `s` as mutable more than once at a time</span>\n    <span class="token comment">// 你不能同时使用 r1 和 r2</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-52"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-52" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="90962082919005830000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::from(&quot;hello, &quot;);\n\n    let r1 = &mut s;\n    let r2 = &mut s;\n\n    // 在下面增加一行代码人为制造编译错误：cannot borrow \\`s\\` as mutable more than once at a time\n    // 你不能同时使用 r1 和 r2\n    println!(&quot;{}&quot;, r1)\n}`, `90962082919005830000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>\n\n    <span class="token comment">// 在下面增加一行代码人为制造编译错误：cannot borrow `s` as mutable more than once at a time</span>\n    <span class="token comment">// 你不能同时使用 r1 和 r2</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> r1<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id="复合类型"><a href="#%E5%A4%8D%E5%90%88%E7%B1%BB%E5%9E%8B" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>复合类型</h1>\n<h2 id="字符串"><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>字符串</h2>\n<h3 id="问题一-11"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-11" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="37164187542491980000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误，不要新增代码行\nfn main() {\n    let s: str = &quot;hello, world&quot;;\n}`, `37164187542491980000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误，不要新增代码行</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s<span class="token punctuation">:</span> str <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-53"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-53" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="89100829676808650000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s: &str = &quot;hello, world&quot;;\n}`, `89100829676808650000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-11"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-11" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="15818990478912420000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 使用至少两种方法来修复错误\nfn main() {\n    let s: Box<str> = &quot;hello, world&quot;.into();\n    greetings(s)\n}\n\nfn greetings(s: &str) {\n    println!(&quot;{}&quot;,s)\n}`, `15818990478912420000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 使用至少两种方法来修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s<span class="token punctuation">:</span> Box<span class="token operator">&lt;</span>str<span class="token operator">></span> <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-54"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-54" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="76792425126213580000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s: Box<str> = &quot;hello, world&quot;.into();\n    greetings(&s)\n}\n\nfn greetings(s: &str) {\n    println!(&quot;{}&quot;, s)\n}`, `76792425126213580000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s<span class="token punctuation">:</span> Box<span class="token operator">&lt;</span>str<span class="token operator">></span> <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">greetings</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="55372847078195945000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s: Box<&str> = &quot;hello, world&quot;.into();\n    greetings(*s)\n}\n\nfn greetings(s: &str) {\n    println!(&quot;{}&quot;, s);\n}`, `55372847078195945000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s<span class="token punctuation">:</span> Box<span class="token operator">&lt;</span><span class="token operator">&amp;</span>str<span class="token operator">></span> <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">greetings</span><span class="token punctuation">(</span><span class="token operator">*</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-5"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-5" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="58252275739544060000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nfn main() {\n    let mut s = __;\n    s.push_str(&quot;hello, world&quot;);\n    s.push(\'!\');\n\n    assert_eq!(s, &quot;hello, world!&quot;);\n}`, `58252275739544060000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> __<span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char string">\'!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"hello, world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-55"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-55" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="75236935395012950000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::from(&quot;&quot;);\n    s.push_str(&quot;hello, world&quot;);\n    s.push(\'!\');\n\n    assert_eq!(s, &quot;hello, world!&quot;);\n}`, `75236935395012950000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char string">\'!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"hello, world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="82962642390114220000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::new();\n    s.push_str(&quot;hello, world&quot;);\n    s.push(\'!\');\n\n    assert_eq!(s, &quot;hello, world!&quot;);\n}`, `82962642390114220000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char string">\'!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"hello, world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-4"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="67539798289418805000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复所有错误，并且不要新增代码行\nfn main() {\n    let  s = String::from(&quot;hello&quot;);\n    s.push(\',\');\n    s.push(&quot; world&quot;);\n    s += &quot;!&quot;.to_string();\n\n    println!(&quot;{}&quot;, s)\n}`, `67539798289418805000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复所有错误，并且不要新增代码行</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span>  s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char string">\',\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">" world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s <span class="token operator">+=</span> <span class="token string">"!"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-56"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-56" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="50820501769917460000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::from(&quot;hello&quot;);\n    s.push(\',\');\n    s.push_str(&quot; world&quot;);\n    s += &quot;!&quot;;\n\n    println!(&quot;{}&quot;, s)\n}`, `50820501769917460000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token char string">\',\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">" world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    s <span class="token operator">+=</span> <span class="token string">"!"</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-4"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="25673027052722740000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nfn main() {\n    let s = String::from(&quot;I like dogs&quot;);\n    // 以下方法会重新分配一块内存空间，然后将修改后的字符串存在这里\n    let s1 = s.__(&quot;dogs&quot;, &quot;cats&quot;);\n\n    assert_eq!(s1, &quot;I like cats&quot;)\n}`, `25673027052722740000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"I like dogs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 以下方法会重新分配一块内存空间，然后将修改后的字符串存在这里</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">__</span><span class="token punctuation">(</span><span class="token string">"dogs"</span><span class="token punctuation">,</span> <span class="token string">"cats"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">"I like cats"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-57"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-57" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="71622312188177360000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;I like dogs&quot;);\n    let s1 = s.replace(&quot;dogs&quot;, &quot;cats&quot;);\n\n    assert_eq!(s1, &quot;I like cats&quot;)\n}`, `71622312188177360000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"I like dogs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"dogs"</span><span class="token punctuation">,</span> <span class="token string">"cats"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">"I like cats"</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-3"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="22952422740315505000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复所有错误，不要删除任何一行代码\nfn main() {\n    let s1 = String::from(&quot;hello,&quot;);\n    let s2 = String::from(&quot;world!&quot;);\n    let s3 = s1 + s2;\n    assert_eq!(s3,&quot;hello,world!&quot;);\n    println!(&quot;{}&quot;,s1);\n}`, `22952422740315505000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复所有错误，不要删除任何一行代码</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello,"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s2 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s3 <span class="token operator">=</span> s1 <span class="token operator">+</span> s2<span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s3<span class="token punctuation">,</span><span class="token string">"hello,world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-58"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-58" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="95434457920109950000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s1 = String::from(&quot;hello,&quot;);\n    let s2 = String::from(&quot;world!&quot;);\n    let s3 = s1.clone() + &s2;\n    assert_eq!(s3, &quot;hello,world!&quot;);\n    println!(&quot;{}&quot;, s1);\n}`, `95434457920109950000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello,"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s2 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s3 <span class="token operator">=</span> s1<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token operator">&amp;</span>s2<span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>s3<span class="token punctuation">,</span> <span class="token string">"hello,world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题七-2"><a href="#%E9%97%AE%E9%A2%98%E4%B8%83-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题七</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="59517674179117330000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 使用至少两种方法来修复错误\nfn main() {\n    let s = &quot;hello, world&quot;;\n    greetings(s)\n}\n\nfn greetings(s: String) {\n    println!(&quot;{}&quot;,s)\n}`, `59517674179117330000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 使用至少两种方法来修复错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span>\n    <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-59"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-59" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="23939661574222290000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;hello, world&quot;;\n    greetings(s)\n}\n\nfn greetings(s: &str) {\n    println!(&quot;{}&quot;, s)\n}`, `23939661574222290000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span>\n    <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="19401126165186720000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;hello, world&quot;.to_string();\n    greetings(s)\n}\n\nfn greetings(s: String) {\n    println!(&quot;{}&quot;, s)\n}`, `19401126165186720000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="8736406000316332000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;hello, world&quot;);\n    greetings(s)\n}\n\nfn greetings(s: String) {\n    println!(&quot;{}&quot;, s)\n}`, `8736406000316332000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">greetings</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题八-2"><a href="#%E9%97%AE%E9%A2%98%E5%85%AB-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题八</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="77562189437314430000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 使用两种方法来解决错误，不要新增代码行\nfn main() {\n    let s = &quot;hello, world&quot;.to_string();\n    let s1: &str = s;\n}`, `77562189437314430000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 使用两种方法来解决错误，不要新增代码行</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str <span class="token operator">=</span> s<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-60"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-60" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="66810715231520020000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;hello, world&quot;.to_string();\n    let s1: &str = &s;\n}`, `66810715231520020000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="24547805050023740000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;hello, world&quot;;\n    let s1: &str = &s;\n}`, `24547805050023740000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="68959377615961510000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;hello, world&quot;.to_string();\n    let s1: &str = &s[..];\n}`, `68959377615961510000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="12040617548490906000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;hello, world&quot;.to_string();\n    let s1: &str = s.as_str();\n}`, `12040617548490906000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">as_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题九-2"><a href="#%E9%97%AE%E9%A2%98%E4%B9%9D-2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题九</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="64760145995903566000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 你可以使用转义的方式来输出想要的字符，这里我们使用十六进制的值，例如 \\x73 会被转义成小写字母 \'s\'\n    // 填空以输出 &quot;I\'m writing Rust&quot;\n    let byte_escape = &quot;I\'m writing Ru\\x73__!&quot;;\n    println!(&quot;What are you doing\\x3F (\\\\x3F means ?) {}&quot;, byte_escape);\n\n    // 也可以使用 Unicode 形式的转义字符\n    let unicode_codepoint = &quot;\\u{211D}&quot;;\n    let character_name = &quot;\\&quot;DOUBLE-STRUCK CAPITAL R\\&quot;&quot;;\n\n    println!(&quot;Unicode character {} (U+211D) is called {}&quot;,\n                unicode_codepoint, character_name );\n\n    // 还能使用 \\ 来连接多行字符串\n    let long_string = &quot;String literals\n                        can span multiple lines.\n                        The linebreak and indentation here \\\n                         can be escaped too!&quot;;\n    println!(&quot;{}&quot;, long_string);\n}`, `64760145995903566000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 你可以使用转义的方式来输出想要的字符，这里我们使用十六进制的值，例如 \\x73 会被转义成小写字母 \'s\'</span>\n    <span class="token comment">// 填空以输出 "I\'m writing Rust"</span>\n    <span class="token keyword">let</span> byte_escape <span class="token operator">=</span> <span class="token string">"I\'m writing Ru\\x73__!"</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"What are you doing\\x3F (\\\\x3F means ?) {}"</span><span class="token punctuation">,</span> byte_escape<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 也可以使用 Unicode 形式的转义字符</span>\n    <span class="token keyword">let</span> unicode_codepoint <span class="token operator">=</span> <span class="token string">"\\u{211D}"</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> character_name <span class="token operator">=</span> <span class="token string">"\\"DOUBLE-STRUCK CAPITAL R\\""</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Unicode character {} (U+211D) is called {}"</span><span class="token punctuation">,</span>\n                unicode_codepoint<span class="token punctuation">,</span> character_name <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 还能使用 \\ 来连接多行字符串</span>\n    <span class="token keyword">let</span> long_string <span class="token operator">=</span> "String literals\n                        can span multiple lines<span class="token punctuation">.</span>\n                        The linebreak and indentation here \\\n                         can <span class="token keyword">be</span> escaped <span class="token macro-rules function">too!</span>"<span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> long_string<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-61"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-61" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="48737057583316120000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let byte_escape = &quot;I\'m writing Ru\\x73\\x74!&quot;;\n    println!(&quot;What are you doing\\x3F (\\\\x3F means ?) {}&quot;, byte_escape);\n\n    let unicode_codepoint = &quot;\\u{211D}&quot;;\n    let character_name = &quot;\\&quot;DOUBLE-STRUCK CAPITAL R\\&quot;&quot;;\n\n    println!(&quot;Unicode character {} (U+211D) is called {}&quot;,\n                unicode_codepoint, character_name );\n\n   let long_string = &quot;String literals\n                        can span multiple lines.\n                        The linebreak and indentation here \\\n                         can be escaped too!&quot;;\n    println!(&quot;{}&quot;, long_string);\n}`, `48737057583316120000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> byte_escape <span class="token operator">=</span> <span class="token string">"I\'m writing Ru\\x73\\x74!"</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"What are you doing\\x3F (\\\\x3F means ?) {}"</span><span class="token punctuation">,</span> byte_escape<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> unicode_codepoint <span class="token operator">=</span> <span class="token string">"\\u{211D}"</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> character_name <span class="token operator">=</span> <span class="token string">"\\"DOUBLE-STRUCK CAPITAL R\\""</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"Unicode character {} (U+211D) is called {}"</span><span class="token punctuation">,</span>\n                unicode_codepoint<span class="token punctuation">,</span> character_name <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n   <span class="token keyword">let</span> long_string <span class="token operator">=</span> "String literals\n                        can span multiple lines<span class="token punctuation">.</span>\n                        The linebreak and indentation here \\\n                         can <span class="token keyword">be</span> escaped <span class="token macro-rules function">too!</span>"<span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> long_string<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题十-1"><a href="#%E9%97%AE%E9%A2%98%E5%8D%81-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题十</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="21398015326959200000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`/* 填空并修复所有错误 */\nfn main() {\n    let raw_str = r&quot;Escapes don\'t work here: \\x3F \\u{211D}&quot;;\n    // 修改上面的行让代码工作\n    assert_eq!(raw_str, &quot;Escapes don\'t work here: ? ℝ&quot;);\n\n    // 如果你希望在字符串中使用双引号，可以使用以下形式\n    let quotes = r#&quot;And then I said: &quot;There is no escape!&quot;&quot;#;\n    println!(&quot;{}&quot;, quotes);\n\n    // 如果希望在字符串中使用 # 号，可以如下使用：\n    let  delimiter = r###&quot;A string with &quot;# in it. And even &quot;##!&quot;###;\n    println!(&quot;{}&quot;, delimiter);\n\n    // 填空\n    let long_delimiter = __;\n    assert_eq!(long_delimiter, &quot;Hello, \\&quot;##\\&quot;&quot;)\n}`, `21398015326959200000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">/* 填空并修复所有错误 */</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> raw_str <span class="token operator">=</span> <span class="token string">r"Escapes don\'t work here: \\x3F \\u{211D}"</span><span class="token punctuation">;</span>\n    <span class="token comment">// 修改上面的行让代码工作</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>raw_str<span class="token punctuation">,</span> <span class="token string">"Escapes don\'t work here: ? ℝ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 如果你希望在字符串中使用双引号，可以使用以下形式</span>\n    <span class="token keyword">let</span> quotes <span class="token operator">=</span> <span class="token string">r#"And then I said: "There is no escape!""#</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> quotes<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 如果希望在字符串中使用 # 号，可以如下使用：</span>\n    <span class="token keyword">let</span>  delimiter <span class="token operator">=</span> <span class="token string">r###"A string with "# in it. And even "##!"###</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> delimiter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    <span class="token keyword">let</span> long_delimiter <span class="token operator">=</span> __<span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>long_delimiter<span class="token punctuation">,</span> <span class="token string">"Hello, \\"##\\""</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-62"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-62" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="36059643846234833000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let raw_str = &quot;Escapes don\'t work here: \\x3F \\u{211D}&quot;;\n    assert_eq!(raw_str, &quot;Escapes don\'t work here: ? ℝ&quot;);\n\n    let quotes = r#&quot;And then I said: &quot;There is no escape!&quot;&quot;#;\n    println!(&quot;{}&quot;, quotes);\n\n    let delimiter = r###&quot;A string with &quot;# in it. And even &quot;##!&quot;###;\n    println!(&quot;{}&quot;, delimiter);\n\n    // 填空\n    let long_delimiter = r###&quot;Hello, &quot;##&quot;&quot;###;\n    assert_eq!(long_delimiter, &quot;Hello, \\&quot;##\\&quot;&quot;)\n}`, `36059643846234833000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> raw_str <span class="token operator">=</span> <span class="token string">"Escapes don\'t work here: \\x3F \\u{211D}"</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>raw_str<span class="token punctuation">,</span> <span class="token string">"Escapes don\'t work here: ? ℝ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> quotes <span class="token operator">=</span> <span class="token string">r#"And then I said: "There is no escape!""#</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> quotes<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> delimiter <span class="token operator">=</span> <span class="token string">r###"A string with "# in it. And even "##!"###</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> delimiter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    <span class="token keyword">let</span> long_delimiter <span class="token operator">=</span> <span class="token string">r###"Hello, "##""###</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>long_delimiter<span class="token punctuation">,</span> <span class="token string">"Hello, \\"##\\""</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题十一"><a href="#%E9%97%AE%E9%A2%98%E5%8D%81%E4%B8%80" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题十一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="32969833259427530000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s1 = String::from(&quot;hi,中国&quot;);\n    let h = s1[0]; // 修改当前行来修复错误，提示: \\`h\\` 字符在 UTF-8 格式中只需要 1 个字节来表示\n    assert_eq!(h, &quot;h&quot;);\n\n    let h1 = &s1[3..5];// 修改当前行来修复错误，提示: \\`中\\` 字符在 UTF-8 格式中需要 3 个字节来表示\n    assert_eq!(h1, &quot;中&quot;);\n}`, `32969833259427530000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hi,中国"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> h <span class="token operator">=</span> s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 修改当前行来修复错误，提示: `h` 字符在 UTF-8 格式中只需要 1 个字节来表示</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token string">"h"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> h1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">..</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 修改当前行来修复错误，提示: `中` 字符在 UTF-8 格式中需要 3 个字节来表示</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span> <span class="token string">"中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-63"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-63" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="36780338282312487000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s1 = String::from(&quot;hi,中国&quot;);\n    let h = &s1[0..1];\n    assert_eq!(h, &quot;h&quot;);\n\n    let h1 = &s1[3..6];\n    assert_eq!(h1, &quot;中&quot;);\n}`, `36780338282312487000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s1 <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hi,中国"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> h <span class="token operator">=</span> <span class="token operator">&amp;</span>s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token string">"h"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> h1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">..</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span> <span class="token string">"中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题十二"><a href="#%E9%97%AE%E9%A2%98%E5%8D%81%E4%BA%8C" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题十二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="47289342345049090000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 填空，打印出 &quot;你好，世界&quot; 中的每一个字符\n    for c in &quot;你好，世界&quot;.__ {\n        println!(&quot;{}&quot;, c)\n    }\n}`, `47289342345049090000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 填空，打印出 "你好，世界" 中的每一个字符</span>\n    <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token string">"你好，世界"</span><span class="token punctuation">.</span>__ <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-64"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-64" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="4714944264445209000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    for c in &quot;你好，世界&quot;.chars() {\n        println!(&quot;{}&quot;, c)\n    }\n}`, `4714944264445209000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token string">"你好，世界"</span><span class="token punctuation">.</span><span class="token function">chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题十三"><a href="#%E9%97%AE%E9%A2%98%E5%8D%81%E4%B8%89" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题十三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="4879165835096510000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`use utf8_slice;\nfn main() {\n    let s = &quot;The 🚀 goes to the 🌑!&quot;;\n\n    let rocket = utf8_slice::slice(s, 4, 5);\n    // 结果是 &quot;🚀&quot;，索引的是字符\n}`, `4879165835096510000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">use</span> utf8_slice<span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"The 🚀 goes to the 🌑!"</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> rocket <span class="token operator">=</span> utf8_slice<span class="token punctuation">::</span><span class="token function">slice</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 结果是 "🚀"，索引的是字符</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="数组"><a href="#%E6%95%B0%E7%BB%84" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>数组</h2>\n<h3 id="问题一-12"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-12" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="66593694300989850000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 使用合适的类型填空\n    let arr: __ = [1, 2, 3, 4, 5];\n\n    // 修改以下代码，让它顺利运行\n    assert!(arr.len() == 4);\n}`, `66593694300989850000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用合适的类型填空</span>\n    <span class="token keyword">let</span> arr<span class="token punctuation">:</span> __ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 修改以下代码，让它顺利运行</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-65"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-65" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="28921874509880287000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr: [i32; 5] = [1, 2, 3, 4, 5];\n\n    assert!(arr.len() == 5);\n}`, `28921874509880287000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr<span class="token punctuation">:</span> <span class="token punctuation">[</span>i32<span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-12"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-12" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="66410279998618110000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 很多时候，我们可以忽略数组的部分类型，也可以忽略全部类型，让编译器帮助我们推导\n    let arr0 = [1, 2, 3];\n    let arr: [_; 3] = [\'a\', \'b\', \'c\'];\n\n    // 填空\n    // 数组分配在栈上， \\`std::mem::size_of_val\\` 函数会返回整个数组占用的内存空间\n    // 数组中的每个 char 元素占用 4 字节的内存空间，因为在 Rust 中， char 是 Unicode 字符\n    assert!(std::mem::size_of_val(&arr) == __);\n}`, `66410279998618110000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 很多时候，我们可以忽略数组的部分类型，也可以忽略全部类型，让编译器帮助我们推导</span>\n    <span class="token keyword">let</span> arr0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> arr<span class="token punctuation">:</span> <span class="token punctuation">[</span>_<span class="token punctuation">;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token char string">\'a\'</span><span class="token punctuation">,</span> <span class="token char string">\'b\'</span><span class="token punctuation">,</span> <span class="token char string">\'c\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    <span class="token comment">// 数组分配在栈上， `std::mem::size_of_val` 函数会返回整个数组占用的内存空间</span>\n    <span class="token comment">// 数组中的每个 char 元素占用 4 字节的内存空间，因为在 Rust 中， char 是 Unicode 字符</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arr<span class="token punctuation">)</span> <span class="token operator">==</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-66"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-66" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="52903555190011330000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr0 = [1, 2, 3];\n    let arr: [_; 3] = [\'a\', \'b\', \'c\'];\n\n    assert!(std::mem::size_of_val(&arr) == 12);\n}`, `52903555190011330000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> arr<span class="token punctuation">:</span> <span class="token punctuation">[</span>_<span class="token punctuation">;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token char string">\'a\'</span><span class="token punctuation">,</span> <span class="token char string">\'b\'</span><span class="token punctuation">,</span> <span class="token char string">\'c\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arr<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-6"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="90293299365136500000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 填空\n    let list: [i32; 100] = __ ;\n\n    assert!(list[0] == 1);\n    assert!(list.len() == 100);\n}`, `90293299365136500000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 填空</span>\n    <span class="token keyword">let</span> list<span class="token punctuation">:</span> <span class="token punctuation">[</span>i32<span class="token punctuation">;</span> <span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">=</span> __ <span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-67"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-67" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="59767691457567690000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let list: [i32; 100] = [1; 100];\n\n    assert!(list[0] == 1);\n    assert!(list.len() == 100);\n}`, `59767691457567690000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> list<span class="token punctuation">:</span> <span class="token punctuation">[</span>i32<span class="token punctuation">;</span> <span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-5"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-5" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="18980437576606302000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 修复错误\n    let _arr = [1, 2, \'3\'];\n}`, `18980437576606302000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 修复错误</span>\n    <span class="token keyword">let</span> _arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token char string">\'3\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-68"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-68" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="1741033055415286500"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let _arr = [1, 2, 3];\n}`, `1741033055415286500`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-5"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-5" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="71223519948523600000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr = [\'a\', \'b\', \'c\'];\n\n    let ele = arr[1]; // 只修改此行来让代码工作\n\n    assert!(ele == \'a\');\n}`, `71223519948523600000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token char string">\'a\'</span><span class="token punctuation">,</span> <span class="token char string">\'b\'</span><span class="token punctuation">,</span> <span class="token char string">\'c\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> ele <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 只修改此行来让代码工作</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>ele <span class="token operator">==</span> <span class="token char string">\'a\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-69"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-69" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="28577206647819555000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr = [\'a\', \'b\', \'c\'];\n\n    let ele = arr[0];\n\n    assert!(ele == \'a\');\n}`, `28577206647819555000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token char string">\'a\'</span><span class="token punctuation">,</span> <span class="token char string">\'b\'</span><span class="token punctuation">,</span> <span class="token char string">\'c\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> ele <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>ele <span class="token operator">==</span> <span class="token char string">\'a\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-4"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-4" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="23210139996329103000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复代码中的错误\nfn main() {\n    let names = [String::from(&quot;Sunfei&quot;), &quot;Sunface&quot;.to_string()];\n\n    // \\`get\\` 返回 \\`Option<T>\\` 类型，因此它的使用非常安全\n    let name0 = names.get(0).unwrap();\n\n    // 但是下标索引就存在越界的风险了\n    let _name1 = &names[2];\n}`, `23210139996329103000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复代码中的错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> names <span class="token operator">=</span> <span class="token punctuation">[</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"Sunfei"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Sunface"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// `get` 返回 `Option&lt;T>` 类型，因此它的使用非常安全</span>\n    <span class="token keyword">let</span> name0 <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 但是下标索引就存在越界的风险了</span>\n    <span class="token keyword">let</span> _name1 <span class="token operator">=</span> <span class="token operator">&amp;</span>names<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-70"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-70" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="54604427178631900000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let names = [String::from(&quot;Sunfei&quot;), &quot;Sunface&quot;.to_string()];\n\n    let name0 = names.get(0).unwrap();\n\n    let _name1 = &names[1];\n}`, `54604427178631900000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> names <span class="token operator">=</span> <span class="token punctuation">[</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"Sunfei"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Sunface"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> name0 <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> _name1 <span class="token operator">=</span> <span class="token operator">&amp;</span>names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="切片"><a href="#%E5%88%87%E7%89%87" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>切片</h2>\n<h3 id="问题一-13"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-13" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="93570102714538480000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复代码中的错误，不要新增代码行!\nfn main() {\n    let arr = [1, 2, 3];\n    let s1: [i32] = arr[0..2];\n\n    let s2: str = &quot;hello, world&quot; as str;\n}`, `93570102714538480000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复代码中的错误，不要新增代码行!</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1<span class="token punctuation">:</span> <span class="token punctuation">[</span>i32<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> s2<span class="token punctuation">:</span> str <span class="token operator">=</span> <span class="token string">"hello, world"</span> <span class="token keyword">as</span> str<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-71"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-71" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="99582629401348950000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr = [1, 2, 3];\n    let s1: &[i32] = &arr[0..2];\n\n    let s2: &str = &quot;hello, world&quot;;\n}`, `99582629401348950000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> s1<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>i32<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> s2<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-13"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-13" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="71990041112548980000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr: [char; 3] = [\'中\', \'国\', \'人\'];\n\n    let slice = &arr[..2];\n\n    // 修改数字 \\`8\\` 让代码工作\n    // 小提示: 切片和数组不一样，它是引用。如果是数组的话，那下面的 \\`assert!\\` 将会通过： \'中\'和\'国\'是char类型，char类型是Unicode编码，大小固定为4字节，两个字符为8字节。\n    assert!(std::mem::size_of_val(&slice) == 8);\n}`, `71990041112548980000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr<span class="token punctuation">:</span> <span class="token punctuation">[</span>char<span class="token punctuation">;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token char string">\'中\'</span><span class="token punctuation">,</span> <span class="token char string">\'国\'</span><span class="token punctuation">,</span> <span class="token char string">\'人\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> slice <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 修改数字 `8` 让代码工作</span>\n    <span class="token comment">// 小提示: 切片和数组不一样，它是引用。如果是数组的话，那下面的 `assert!` 将会通过： \'中\'和\'国\'是char类型，char类型是Unicode编码，大小固定为4字节，两个字符为8字节。</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>slice<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-72"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-72" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="39898500566109840000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr: [char; 3] = [\'中\', \'国\', \'人\'];\n\n    let slice = &arr[..2];\n\n    // 16 是切片大小\n    assert!(std::mem::size_of_val(&slice) == 16);\n    // 8 是数组大小\n    assert!(std::mem::size_of_val(slice) == 8);\n}`, `39898500566109840000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr<span class="token punctuation">:</span> <span class="token punctuation">[</span>char<span class="token punctuation">;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token char string">\'中\'</span><span class="token punctuation">,</span> <span class="token char string">\'国\'</span><span class="token punctuation">,</span> <span class="token char string">\'人\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> slice <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 16 是切片大小</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>slice<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 8 是数组大小</span>\n    <span class="token function">assert!</span><span class="token punctuation">(</span>std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span><span class="token function">size_of_val</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-7"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="88344215738487460000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n   let arr: [i32; 5] = [1, 2, 3, 4, 5];\n  // 填空让代码工作起来\n  let slice: __ = __;\n  assert_eq!(slice, &[2, 3, 4]);\n}`, `88344215738487460000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">let</span> arr<span class="token punctuation">:</span> <span class="token punctuation">[</span>i32<span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">// 填空让代码工作起来</span>\n  <span class="token keyword">let</span> slice<span class="token punctuation">:</span> __ <span class="token operator">=</span> __<span class="token punctuation">;</span>\n  <span class="token function">assert_eq!</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-73"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-73" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="14328287231485958000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let arr: [i32; 5] = [1, 2, 3, 4, 5];\n    // let slice: &[i32] = &arr[1..=3];\n    let slice: &[i32] = &arr[1..4];\n    assert_eq!(slice, &[2, 3, 4]);\n}`, `14328287231485958000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr<span class="token punctuation">:</span> <span class="token punctuation">[</span>i32<span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// let slice: &amp;[i32] = &amp;arr[1..=3];</span>\n    <span class="token keyword">let</span> slice<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span>i32<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-6"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="69411332140729230000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;hello&quot;);\n\n    let slice1 = &s[0..2];\n    // 填空，不要再使用 0..2\n    let slice2 = &s[__];\n\n    assert_eq!(slice1, slice2);\n}`, `69411332140729230000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> slice1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// 填空，不要再使用 0..2</span>\n    <span class="token keyword">let</span> slice2 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span>__<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>slice1<span class="token punctuation">,</span> slice2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-74"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-74" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="45417804634087330000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = String::from(&quot;hello&quot;);\n\n    let slice1 = &s[0..2];\n    // let slice2 = &s[..=1];\n    let slice2 = &s[..2];\n\n    assert_eq!(slice1, slice2);\n}`, `45417804634087330000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> slice1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// let slice2 = &amp;s[..=1];</span>\n    <span class="token keyword">let</span> slice2 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>slice1<span class="token punctuation">,</span> slice2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-6"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="83218107402680340000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;你好，世界&quot;;\n    // 修改以下代码行，让代码工作起来\n    let slice = &s[0..2];\n\n    assert!(slice == &quot;你&quot;);\n}`, `83218107402680340000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"你好，世界"</span><span class="token punctuation">;</span>\n    <span class="token comment">// 修改以下代码行，让代码工作起来</span>\n    <span class="token keyword">let</span> slice <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>slice <span class="token operator">==</span> <span class="token string">"你"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-75"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-75" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="79654627065605180000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let s = &quot;你好，世界&quot;;\n    let slice = &s[0..3];\n\n    assert!(slice == &quot;你&quot;);\n}`, `79654627065605180000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">"你好，世界"</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> slice <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert!</span><span class="token punctuation">(</span>slice <span class="token operator">==</span> <span class="token string">"你"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-5"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-5" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="88695240942525140000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复所有错误\nfn main() {\n    let mut s = String::from(&quot;hello world&quot;);\n\n    // 这里, &s 是 \\`&String\\` 类型，但是 \\`first_character\\` 函数需要的是 \\`&str\\` 类型。\n    // 尽管两个类型不一样，但是代码仍然可以工作，原因是 \\`&String\\` 会被隐式地转换成 \\`&str\\` 类型，如果大家想要知道更多，可以看看 Deref 章节: https://course.rs/advance/smart-pointer/deref.html\n    let ch = first_character(&s);\n\n    s.clear(); // error!\n\n    println!(&quot;the first character is: {}&quot;, ch);\n}\nfn first_character(s: &str) -> &str {\n    &s[..1]\n}`, `88695240942525140000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复所有错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 这里, &amp;s 是 `&amp;String` 类型，但是 `first_character` 函数需要的是 `&amp;str` 类型。</span>\n    <span class="token comment">// 尽管两个类型不一样，但是代码仍然可以工作，原因是 `&amp;String` 会被隐式地转换成 `&amp;str` 类型，如果大家想要知道更多，可以看看 Deref 章节: https://course.rs/advance/smart-pointer/deref.html</span>\n    <span class="token keyword">let</span> ch <span class="token operator">=</span> <span class="token function">first_character</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    s<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error!</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"the first character is: {}"</span><span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">first_character</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str<span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">&amp;</span>str <span class="token punctuation">{</span>\n    <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-76"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-76" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="39881228878849840000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let mut s = String::from(&quot;hello world&quot;);\n\n    let ch = first_character(&s);\n\n    println!(&quot;the first character is: {}&quot;, ch);\n\n    s.clear(); // error!\n}\n\nfn first_character(s: &str) -> &str {\n    &s[..1]\n}`, `39881228878849840000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> ch <span class="token operator">=</span> <span class="token function">first_character</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"the first character is: {}"</span><span class="token punctuation">,</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    s<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error!</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">first_character</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span>str<span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">&amp;</span>str <span class="token punctuation">{</span>\n    <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token number">1</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="元组"><a href="#%E5%85%83%E7%BB%84" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>元组</h2>\n<h3 id="问题一-14"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-14" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="10428781055429659000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let _t0: (u8,i16) = (0, -1);\n    // 元组的成员还可以是一个元组\n    let _t1: (u8, (i16, u32)) = (0, (-1, 1));\n    // 填空让代码工作\n    let t: (u8, __, i64, __, __) = (1u8, 2u16, 3i64, &quot;hello&quot;, String::from(&quot;, world&quot;));\n}`, `10428781055429659000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _t0<span class="token punctuation">:</span> <span class="token punctuation">(</span>u8<span class="token punctuation">,</span>i16<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 元组的成员还可以是一个元组</span>\n    <span class="token keyword">let</span> _t1<span class="token punctuation">:</span> <span class="token punctuation">(</span>u8<span class="token punctuation">,</span> <span class="token punctuation">(</span>i16<span class="token punctuation">,</span> u32<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 填空让代码工作</span>\n    <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token punctuation">(</span>u8<span class="token punctuation">,</span> __<span class="token punctuation">,</span> i64<span class="token punctuation">,</span> __<span class="token punctuation">,</span> __<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u8</span><span class="token punctuation">,</span> <span class="token number">2u16</span><span class="token punctuation">,</span> <span class="token number">3i64</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">,</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">", world"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-77"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-77" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="26178457479061955000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let _t0: (u8,i16) = (0, -1);\n    // 元组的成员还可以是一个元组\n    let _t1: (u8, (i16, u32)) = (0, (-1, 1));\n    // 填空让代码工作\n    let t: (u8, u16, i64, &str, String) = (1u8, 2u16, 3i64, &quot;hello&quot;, String::from(&quot;, world&quot;));\n}`, `26178457479061955000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> _t0<span class="token punctuation">:</span> <span class="token punctuation">(</span>u8<span class="token punctuation">,</span>i16<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 元组的成员还可以是一个元组</span>\n    <span class="token keyword">let</span> _t1<span class="token punctuation">:</span> <span class="token punctuation">(</span>u8<span class="token punctuation">,</span> <span class="token punctuation">(</span>i16<span class="token punctuation">,</span> u32<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 填空让代码工作</span>\n    <span class="token keyword">let</span> t<span class="token punctuation">:</span> <span class="token punctuation">(</span>u8<span class="token punctuation">,</span> u16<span class="token punctuation">,</span> i64<span class="token punctuation">,</span> <span class="token operator">&amp;</span>str<span class="token punctuation">,</span> String<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1u8</span><span class="token punctuation">,</span> <span class="token number">2u16</span><span class="token punctuation">,</span> <span class="token number">3i64</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">,</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">", world"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-14"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-14" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="16058647727385700000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修改合适的地方，让代码工作\nfn main() {\n    let t = (&quot;i&quot;, &quot;am&quot;, &quot;sunface&quot;);\n    assert_eq!(t.1, &quot;sunface&quot;);\n}`, `16058647727385700000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修改合适的地方，让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"i"</span><span class="token punctuation">,</span> <span class="token string">"am"</span><span class="token punctuation">,</span> <span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>t<span class="token number">.1</span><span class="token punctuation">,</span> <span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-78"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-78" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="94765352037288350000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修改合适的地方，让代码工作\nfn main() {\n    let t = (&quot;i&quot;, &quot;am&quot;, &quot;sunface&quot;);\n    assert_eq!(t.2, &quot;sunface&quot;);\n}`, `94765352037288350000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修改合适的地方，让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"i"</span><span class="token punctuation">,</span> <span class="token string">"am"</span><span class="token punctuation">,</span> <span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>t<span class="token number">.2</span><span class="token punctuation">,</span> <span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-8"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="90934796345284500000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复代码错误\nfn main() {\n    let too_long_tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n    println!(&quot;too long tuple: {:?}&quot;, too_long_tuple);\n}`, `90934796345284500000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复代码错误</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> too_long_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"too long tuple: {:?}"</span><span class="token punctuation">,</span> too_long_tuple<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-79"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-79" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="17015727506492318000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(``, `17015727506492318000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"></span></pre></div>\n<h3 id="问题四-7"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="85373372934041800000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let tup = (1, 6.4, &quot;hello&quot;);\n\n    // 填空\n    let __ = tup;\n\n    assert_eq!(x, 1);\n    assert_eq!(y, &quot;hello&quot;);\n    assert_eq!(z, 6.4);\n}`, `85373372934041800000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    <span class="token keyword">let</span> __ <span class="token operator">=</span> tup<span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-80"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-80" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="94088110355122160000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let tup = (1, 6.4, &quot;hello&quot;);\n\n    // 填空\n    let (x, z, y) = tup;\n\n    assert_eq!(x, 1);\n    assert_eq!(y, &quot;hello&quot;);\n    assert_eq!(z, 6.4);\n}`, `94088110355122160000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> z<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> tup<span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-7"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="12201453269719886000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let (x, y, z);\n\n    // 填空\n    __ = (1, 2, 3);\n\n    assert_eq!(x, 3);\n    assert_eq!(y, 1);\n    assert_eq!(z, 2);\n}`, `12201453269719886000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    __ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-81"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-81" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="40022227332190720000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    let (x, y, z);\n\n    // 填空\n    (y, z, x) = (1, 2, 3);\n\n    assert_eq!(x, 3);\n    assert_eq!(y, 1);\n    assert_eq!(z, 2);\n}`, `40022227332190720000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    <span class="token punctuation">(</span>y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-6"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="69293754311332176000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 填空，需要稍微计算下\n    let (x, y) = sum_multiply(__);\n\n    assert_eq!(x, 5);\n    assert_eq!(y, 6);\n}\n\nfn sum_multiply(nums: (i32, i32)) -> (i32, i32) {\n    (nums.0 + nums.1, nums.0 * nums.1)\n}`, `69293754311332176000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 填空，需要稍微计算下</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">sum_multiply</span><span class="token punctuation">(</span>__<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">sum_multiply</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">(</span>nums<span class="token number">.0</span> <span class="token operator">+</span> nums<span class="token number">.1</span><span class="token punctuation">,</span> nums<span class="token number">.0</span> <span class="token operator">*</span> nums<span class="token number">.1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-82"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-82" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="45438292459846960000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    // 填空，需要稍微计算下\n    let (x, y) = sum_multiply((2, 3));\n\n    assert_eq!(x, 5);\n    assert_eq!(y, 6);\n}\n\nfn sum_multiply(nums: (i32, i32)) -> (i32, i32) {\n    (nums.0 + nums.1, nums.0 * nums.1)\n}`, `45438292459846960000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 填空，需要稍微计算下</span>\n    <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">sum_multiply</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">sum_multiply</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">(</span>nums<span class="token number">.0</span> <span class="token operator">+</span> nums<span class="token number">.1</span><span class="token punctuation">,</span> nums<span class="token number">.0</span> <span class="token operator">*</span> nums<span class="token number">.1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="结构体"><a href="#%E7%BB%93%E6%9E%84%E4%BD%93" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>结构体</h2>\n<h3 id="问题一-15"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-15" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="57769534618547945000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// fix the error\nstruct Person {\n    name: String,\n    age: u8,\n    hobby: String\n}\nfn main() {\n    let age = 30;\n    let p = Person {\n        name: String::from(&quot;sunface&quot;),\n        age,\n    };\n}`, `57769534618547945000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// fix the error</span>\n<span class="token keyword">struct</span> Person <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> u8<span class="token punctuation">,</span>\n    hobby<span class="token punctuation">:</span> String\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> p <span class="token operator">=</span> Person <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-83"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-83" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="31129406904860680000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// fix the error\nstruct Person {\n    name: String,\n    age: u8,\n    hobby: String,\n}\nfn main() {\n    let age = 30;\n    let p = Person {\n        name: String::from(&quot;sunface&quot;),\n        age,\n        hobby: String::from(&quot;dsa&quot;),\n    };\n}`, `31129406904860680000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// fix the error</span>\n<span class="token keyword">struct</span> Person <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> u8<span class="token punctuation">,</span>\n    hobby<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> p <span class="token operator">=</span> Person <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">,</span>\n        hobby<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"dsa"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-15"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-15" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="50439676593230545000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`struct Unit;\ntrait SomeTrait {\n    // ...定义一些行为\n}\n\n// 我们并不关心结构体中有什么数据( 字段 )，但我们关心它的行为。\n// 因此这里我们使用没有任何字段的单元结构体，然后为它实现一些行为\nimpl SomeTrait for Unit {  }\nfn main() {\n    let u = Unit;\n    do_something_with_unit(u);\n}\n\n// 填空，让代码工作\nfn do_something_with_unit(u: __) {   }`, `50439676593230545000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">struct</span> Unit<span class="token punctuation">;</span>\n<span class="token keyword">trait</span> SomeTrait <span class="token punctuation">{</span>\n    <span class="token comment">// ...定义一些行为</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我们并不关心结构体中有什么数据( 字段 )，但我们关心它的行为。</span>\n<span class="token comment">// 因此这里我们使用没有任何字段的单元结构体，然后为它实现一些行为</span>\n<span class="token keyword">impl</span> SomeTrait <span class="token keyword">for</span> Unit <span class="token punctuation">{</span>  <span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> u <span class="token operator">=</span> Unit<span class="token punctuation">;</span>\n    <span class="token function">do_something_with_unit</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 填空，让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">do_something_with_unit</span><span class="token punctuation">(</span>u<span class="token punctuation">:</span> __<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-84"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-84" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="43106696126703630000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`struct Unit;\ntrait SomeTrait {\n    // ...定义一些行为\n}\n\n// 我们并不关心结构体中有什么数据(字段)，但我们关心它的行为。\n// 因此这里我们使用没有任何字段的单元结构体，然后为它实现一些行为\nimpl SomeTrait for Unit {}\nfn main() {\n    let u = Unit;\n    do_something_with_unit(u);\n}\n\n// 填空，让代码工作\nfn do_something_with_unit(u: Unit) {}`, `43106696126703630000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">struct</span> Unit<span class="token punctuation">;</span>\n<span class="token keyword">trait</span> SomeTrait <span class="token punctuation">{</span>\n    <span class="token comment">// ...定义一些行为</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我们并不关心结构体中有什么数据(字段)，但我们关心它的行为。</span>\n<span class="token comment">// 因此这里我们使用没有任何字段的单元结构体，然后为它实现一些行为</span>\n<span class="token keyword">impl</span> SomeTrait <span class="token keyword">for</span> Unit <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> u <span class="token operator">=</span> Unit<span class="token punctuation">;</span>\n    <span class="token function">do_something_with_unit</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 填空，让代码工作</span>\n<span class="token keyword">fn</span> <span class="token function">do_something_with_unit</span><span class="token punctuation">(</span>u<span class="token punctuation">:</span> Unit<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-9"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="18537685493498390000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空并修复错误\nstruct Color(i32, i32, i32);\nstruct Point(i32, i32, i32);\nfn main() {\n    let v = Point(__, __, __);\n    check_color(v);\n}\n\nfn check_color(p: Color) {\n   let (x, _, _) = p;\n   assert_eq!(x, 0);\n   assert_eq!(p.1, 127);\n   assert_eq!(__, 255);\n}`, `18537685493498390000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空并修复错误</span>\n<span class="token keyword">struct</span> <span class="token function">Color</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">struct</span> <span class="token function">Point</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token function">Point</span><span class="token punctuation">(</span>__<span class="token punctuation">,</span> __<span class="token punctuation">,</span> __<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">check_color</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">check_color</span><span class="token punctuation">(</span>p<span class="token punctuation">:</span> Color<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> _<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=</span> p<span class="token punctuation">;</span>\n   <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token function">assert_eq!</span><span class="token punctuation">(</span>p<span class="token number">.1</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token function">assert_eq!</span><span class="token punctuation">(</span>__<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-85"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-85" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="29646521746188180000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空并修复错误\nstruct Color(i32, i32, i32);\nstruct Point(i32, i32, i32);\nfn main() {\n    let v = Point(0, 127, 255);\n    check_color(v);\n}\n\nfn check_color(p: Point) {\n    let Point(x, y, z) = p;\n    assert_eq!(x, 0);\n    assert_eq!(p.1, 127);\n    assert_eq!(z, 255);\n}`, `29646521746188180000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空并修复错误</span>\n<span class="token keyword">struct</span> <span class="token function">Color</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">struct</span> <span class="token function">Point</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token function">Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">check_color</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">check_color</span><span class="token punctuation">(</span>p<span class="token punctuation">:</span> Point<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token function">Point</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span> <span class="token operator">=</span> p<span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>p<span class="token number">.1</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-8"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="84972581260616530000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空并修复错误，不要增加或移除代码行\nstruct Person {\n    name: String,\n    age: u8,\n}\nfn main() {\n    let age = 18;\n    let p = Person {\n        name: String::from(&quot;sunface&quot;),\n        age,\n    };\n\n    // how can you believe sunface is only 18?\n    p.age = 30;\n\n    // 填空\n    __ = String::from(&quot;sunfei&quot;);\n}`, `84972581260616530000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空并修复错误，不要增加或移除代码行</span>\n<span class="token keyword">struct</span> Person <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> u8<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> p <span class="token operator">=</span> Person <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// how can you believe sunface is only 18?</span>\n    p<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    __ <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunfei"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-86"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-86" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="6549900559279820000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空并修复错误，不要增加或移除代码行\nstruct Person {\n    name: String,\n    age: u8,\n}\nfn main() {\n    let age = 18;\n    let mut p = Person {\n        name: String::from(&quot;sunface&quot;),\n        age,\n    };\n\n    // how can you believe sunface is only 18?\n    p.age = 30;\n\n    // 填空\n    p.name = String::from(&quot;sunfei&quot;);\n}`, `6549900559279820000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空并修复错误，不要增加或移除代码行</span>\n<span class="token keyword">struct</span> Person <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> u8<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> p <span class="token operator">=</span> Person <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// how can you believe sunface is only 18?</span>\n    p<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 填空</span>\n    p<span class="token punctuation">.</span>name <span class="token operator">=</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunfei"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-8"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="8715416460732950000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nstruct Person {\n    name: String,\n    age: u8,\n}\nfn main() {}\n\nfn build_person(name: String, age: u8) -> Person {\n    Person {\n        age,\n        __\n    }\n}`, `8715416460732950000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">struct</span> Person <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> u8<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">build_person</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> String<span class="token punctuation">,</span> age<span class="token punctuation">:</span> u8<span class="token punctuation">)</span> <span class="token punctuation">-></span> Person <span class="token punctuation">{</span>\n    Person <span class="token punctuation">{</span>\n        age<span class="token punctuation">,</span>\n        __\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-87"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-87" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="46404818281843040000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nstruct Person {\n    name: String,\n    age: u8,\n}\nfn main() {}\n\nfn build_person(name: String, age: u8) -> Person {\n    Person {\n        age,\n        name\n    }\n}`, `46404818281843040000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">struct</span> Person <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    age<span class="token punctuation">:</span> u8<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">build_person</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> String<span class="token punctuation">,</span> age<span class="token punctuation">:</span> u8<span class="token punctuation">)</span> <span class="token punctuation">-></span> Person <span class="token punctuation">{</span>\n    Person <span class="token punctuation">{</span>\n        age<span class="token punctuation">,</span>\n        name\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-7"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-7" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="15888168069189490000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码工作\nstruct User {\n    active: bool,\n    username: String,\n    email: String,\n    sign_in_count: u64,\n}\nfn main() {\n    let u1 = User {\n        email: String::from(&quot;someone@example.com&quot;),\n        username: String::from(&quot;sunface&quot;),\n        active: true,\n        sign_in_count: 1,\n    };\n\n    let u2 = set_email(u1);\n}\n\nfn set_email(u: User) -> User {\n    User {\n        email: String::from(&quot;contact@im.dev&quot;),\n        __\n    }\n}`, `15888168069189490000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码工作</span>\n<span class="token keyword">struct</span> User <span class="token punctuation">{</span>\n    active<span class="token punctuation">:</span> bool<span class="token punctuation">,</span>\n    username<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    email<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    sign_in_count<span class="token punctuation">:</span> u64<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> u1 <span class="token operator">=</span> User <span class="token punctuation">{</span>\n        email<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"someone@example.com"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        username<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        active<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span>\n        sign_in_count<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> u2 <span class="token operator">=</span> <span class="token function">set_email</span><span class="token punctuation">(</span>u1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">set_email</span><span class="token punctuation">(</span>u<span class="token punctuation">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">-></span> User <span class="token punctuation">{</span>\n    User <span class="token punctuation">{</span>\n        email<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"contact@im.dev"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        __\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-88"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-88" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="98223892215782340000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码工作\nstruct User {\n    active: bool,\n    username: String,\n    email: String,\n    sign_in_count: u64,\n}\nfn main() {\n    let u1 = User {\n        email: String::from(&quot;someone@example.com&quot;),\n        username: String::from(&quot;sunface&quot;),\n        active: true,\n        sign_in_count: 1,\n    };\n\n    let u2 = set_email(u1);\n}\n\nfn set_email(u: User) -> User {\n    User {\n        email: String::from(&quot;contact@im.dev&quot;),\n        ..u\n    }\n}`, `98223892215782340000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码工作</span>\n<span class="token keyword">struct</span> User <span class="token punctuation">{</span>\n    active<span class="token punctuation">:</span> bool<span class="token punctuation">,</span>\n    username<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    email<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    sign_in_count<span class="token punctuation">:</span> u64<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> u1 <span class="token operator">=</span> User <span class="token punctuation">{</span>\n        email<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"someone@example.com"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        username<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"sunface"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        active<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span>\n        sign_in_count<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> u2 <span class="token operator">=</span> <span class="token function">set_email</span><span class="token punctuation">(</span>u1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">set_email</span><span class="token punctuation">(</span>u<span class="token punctuation">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">-></span> User <span class="token punctuation">{</span>\n    User <span class="token punctuation">{</span>\n        email<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"contact@im.dev"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">..</span>u\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题七-3"><a href="#%E9%97%AE%E9%A2%98%E4%B8%83-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题七</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="6797656614052472000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码工作\n#[__]\nstruct Rectangle {\n    width: u32,\n    height: u32,\n}\n\nfn main() {\n    let scale = 2;\n    let rect1 = Rectangle {\n        width: dbg!(30 * scale), // 打印 debug 信息到标准错误输出 stderr,并将 \\`30 * scale\\` 的值赋给 \\`width\\`\n        height: 50,\n    };\n\n    dbg!(&rect1); // 打印 debug 信息到标准错误输出 stderr\n\n    println!(__, rect1); // 打印 debug 信息到标准输出 stdout\n}`, `6797656614052472000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码工作</span>\n<span class="token attribute attr-name">#[__]</span>\n<span class="token keyword">struct</span> Rectangle <span class="token punctuation">{</span>\n    width<span class="token punctuation">:</span> u32<span class="token punctuation">,</span>\n    height<span class="token punctuation">:</span> u32<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> scale <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> rect1 <span class="token operator">=</span> Rectangle <span class="token punctuation">{</span>\n        width<span class="token punctuation">:</span> <span class="token function">dbg!</span><span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> scale<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 打印 debug 信息到标准错误输出 stderr,并将 `30 * scale` 的值赋给 `width`</span>\n        height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">dbg!</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rect1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印 debug 信息到标准错误输出 stderr</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span>__<span class="token punctuation">,</span> rect1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印 debug 信息到标准输出 stdout</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-89"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-89" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="51531499141059720000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码工作\n#[derive(Debug)]\nstruct Rectangle {\n    width: u32,\n    height: u32,\n}\n\nfn main() {\n    let scale = 2;\n    let rect1 = Rectangle {\n        width: dbg!(30 * scale), // 打印 debug 信息到标准错误输出 stderr,并将 \\`30 * scale\\` 的值赋给 \\`width\\`\n        height: 50,\n    };\n\n    dbg!(&rect1); // 打印 debug 信息到标准错误输出 stderr\n\n    println!(&quot;{:#?}&quot;, rect1); // 打印 debug 信息到标准输出 stdout\n}`, `51531499141059720000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码工作</span>\n<span class="token attribute attr-name">#[derive(Debug)]</span>\n<span class="token keyword">struct</span> Rectangle <span class="token punctuation">{</span>\n    width<span class="token punctuation">:</span> u32<span class="token punctuation">,</span>\n    height<span class="token punctuation">:</span> u32<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> scale <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> rect1 <span class="token operator">=</span> Rectangle <span class="token punctuation">{</span>\n        width<span class="token punctuation">:</span> <span class="token function">dbg!</span><span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">*</span> scale<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 打印 debug 信息到标准错误输出 stderr,并将 `30 * scale` 的值赋给 `width`</span>\n        height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">dbg!</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rect1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印 debug 信息到标准错误输出 stderr</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:#?}"</span><span class="token punctuation">,</span> rect1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印 debug 信息到标准输出 stdout</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题八-3"><a href="#%E9%97%AE%E9%A2%98%E5%85%AB-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题八</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="20343747672706482000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`fn main() {\n    #[derive(Debug)]\n    struct Person {\n        name: String,\n        age: Box<u8>,\n    }\n\n    let person = Person {\n        name: String::from(&quot;Alice&quot;),\n        age: Box::new(20),\n    };\n\n    // 通过这种解构式模式匹配，person.name 的所有权被转移给新的变量 \\`name\\`\n    // 但是，这里 \\`age\\` 变量确是对 person.age 的引用, 这里 ref 的使用相当于: let age = &person.age\n    let Person { name, ref age } = person;\n\n    println!(&quot;The person\'s age is {}&quot;, age);\n\n    println!(&quot;The person\'s name is {}&quot;, name);\n\n    // Error! 原因是 person 的一部分已经被转移了所有权，因此我们无法再使用它\n    //println!(&quot;The person struct is {:?}&quot;, person);\n\n    // 虽然 \\`person\\` 作为一个整体无法再被使用，但是 \\`person.age\\` 依然可以使用\n    println!(&quot;The person\'s age from person struct is {}&quot;, person.age);\n}`, `20343747672706482000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token attribute attr-name">#[derive(Debug)]</span>\n    <span class="token keyword">struct</span> Person <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> Box<span class="token operator">&lt;</span>u8<span class="token operator">></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">let</span> person <span class="token operator">=</span> Person <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"Alice"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        age<span class="token punctuation">:</span> Box<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 通过这种解构式模式匹配，person.name 的所有权被转移给新的变量 `name`</span>\n    <span class="token comment">// 但是，这里 `age` 变量确是对 person.age 的引用, 这里 ref 的使用相当于: let age = &amp;person.age</span>\n    <span class="token keyword">let</span> Person <span class="token punctuation">{</span> name<span class="token punctuation">,</span> <span class="token keyword">ref</span> age <span class="token punctuation">}</span> <span class="token operator">=</span> person<span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"The person\'s age is {}"</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"The person\'s name is {}"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Error! 原因是 person 的一部分已经被转移了所有权，因此我们无法再使用它</span>\n    <span class="token comment">//println!("The person struct is {:?}", person);</span>\n\n    <span class="token comment">// 虽然 `person` 作为一个整体无法再被使用，但是 `person.age` 依然可以使用</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"The person\'s age from person struct is {}"</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题九-3"><a href="#%E9%97%AE%E9%A2%98%E4%B9%9D-3" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题九</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="98295322751657120000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\n#[derive(Debug)]\nstruct File {\n    name: String,\n    data: String,\n}\nfn main() {\n    let f = File {\n        name: String::from(&quot;readme.md&quot;),\n        data: &quot;Rust By Practice&quot;.to_string()\n    };\n\n    let _name = f.name;\n\n    // 只能修改这一行\n    println!(&quot;{}, {}, {:?}&quot;,f.name, f.data, f);\n}`, `98295322751657120000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token attribute attr-name">#[derive(Debug)]</span>\n<span class="token keyword">struct</span> File <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    data<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> f <span class="token operator">=</span> File <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"readme.md"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        data<span class="token punctuation">:</span> <span class="token string">"Rust By Practice"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> _name <span class="token operator">=</span> f<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n\n    <span class="token comment">// 只能修改这一行</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}, {}, {:?}"</span><span class="token punctuation">,</span>f<span class="token punctuation">.</span>name<span class="token punctuation">,</span> f<span class="token punctuation">.</span>data<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-90"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-90" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="27008718446577394000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\n#[derive(Debug)]\nstruct File {\n    name: String,\n    data: String,\n}\nfn main() {\n    let f = File {\n        name: String::from(&quot;readme.md&quot;),\n        data: &quot;Rust By Practice&quot;.to_string(),\n    };\n\n    let _name = f.name;\n\n    // 只能修改这一行\n    println!(&quot;{}, {}&quot;, _name, f.data);\n}`, `27008718446577394000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token attribute attr-name">#[derive(Debug)]</span>\n<span class="token keyword">struct</span> File <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n    data<span class="token punctuation">:</span> String<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> f <span class="token operator">=</span> File <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"readme.md"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        data<span class="token punctuation">:</span> <span class="token string">"Rust By Practice"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> _name <span class="token operator">=</span> f<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n\n    <span class="token comment">// 只能修改这一行</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}, {}"</span><span class="token punctuation">,</span> _name<span class="token punctuation">,</span> f<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id="枚举"><a href="#%E6%9E%9A%E4%B8%BE" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>枚举</h2>\n<h3 id="问题一-16"><a href="#%E9%97%AE%E9%A2%98%E4%B8%80-16" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题一</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="97041960942330380000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nenum Number {\n    Zero,\n    One,\n    Two,\n}\n\nenum Number1 {\n    Zero = 0,\n    One,\n    Two,\n}\n\n// C语言风格的枚举定义\nenum Number2 {\n    Zero = 0.0,\n    One = 1.0,\n    Two = 2.0,\n}\n\n\nfn main() {\n    // 通过 \\`as\\` 可以将枚举值强转为整数类型\n    assert_eq!(Number::One, Number1::One);\n    assert_eq!(Number1::One, Number2::One);\n}`, `97041960942330380000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">enum</span> Number <span class="token punctuation">{</span>\n    Zero<span class="token punctuation">,</span>\n    One<span class="token punctuation">,</span>\n    Two<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">enum</span> Number1 <span class="token punctuation">{</span>\n    Zero <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    One<span class="token punctuation">,</span>\n    Two<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// C语言风格的枚举定义</span>\n<span class="token keyword">enum</span> Number2 <span class="token punctuation">{</span>\n    Zero <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span>\n    One <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">,</span>\n    Two <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 通过 `as` 可以将枚举值强转为整数类型</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>Number<span class="token punctuation">::</span>One<span class="token punctuation">,</span> Number1<span class="token punctuation">::</span>One<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>Number1<span class="token punctuation">::</span>One<span class="token punctuation">,</span> Number2<span class="token punctuation">::</span>One<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-91"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-91" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="1645311208981392600"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 修复错误\nenum Number {\n    Zero,\n    One,\n    Two,\n}\n\nenum Number1 {\n    Zero = 0,\n    One,\n    Two,\n}\n\n// C语言风格的枚举定义\nenum Number2 {\n    Zero = 0,\n    One = 1,\n    Two = 2,\n}\n\n\nfn main() {\n    // 通过 \\`as\\` 可以将枚举值强转为整数类型\n    assert_eq!(Number::One as u8, Number1::One as u8);\n    assert_eq!(Number1::One as u8, Number2::One as u8);\n}`, `1645311208981392600`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 修复错误</span>\n<span class="token keyword">enum</span> Number <span class="token punctuation">{</span>\n    Zero<span class="token punctuation">,</span>\n    One<span class="token punctuation">,</span>\n    Two<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">enum</span> Number1 <span class="token punctuation">{</span>\n    Zero <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    One<span class="token punctuation">,</span>\n    Two<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// C语言风格的枚举定义</span>\n<span class="token keyword">enum</span> Number2 <span class="token punctuation">{</span>\n    Zero <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    One <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    Two <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 通过 `as` 可以将枚举值强转为整数类型</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>Number<span class="token punctuation">::</span>One <span class="token keyword">as</span> u8<span class="token punctuation">,</span> Number1<span class="token punctuation">::</span>One <span class="token keyword">as</span> u8<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">assert_eq!</span><span class="token punctuation">(</span>Number1<span class="token punctuation">::</span>One <span class="token keyword">as</span> u8<span class="token punctuation">,</span> Number2<span class="token punctuation">::</span>One <span class="token keyword">as</span> u8<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题二-16"><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-16" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题二</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="51487309286882280000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nfn main() {\n    let msg1 = Message::Move{__}; // 使用x = 1, y = 2 来初始化\n    let msg2 = Message::Write(__); // 使用 &quot;hello, world!&quot; 来初始化\n}`, `51487309286882280000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">enum</span> Message <span class="token punctuation">{</span>\n    Quit<span class="token punctuation">,</span>\n    Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">Write</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">ChangeColor</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> msg1 <span class="token operator">=</span> Message<span class="token punctuation">::</span>Move<span class="token punctuation">{</span>__<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 使用x = 1, y = 2 来初始化</span>\n    <span class="token keyword">let</span> msg2 <span class="token operator">=</span> Message<span class="token punctuation">::</span><span class="token function">Write</span><span class="token punctuation">(</span>__<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 "hello, world!" 来初始化</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-92"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-92" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="45381093791160600000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nfn main() {\n    let msg1 = Message::Move { x: 1, y: 2 }; // 使用x = 1, y = 2 来初始化\n    let msg2 = Message::Write(String::from(&quot;hello, world!&quot;)); // 使用 &quot;hello, world!&quot; 来初始化\n}`, `45381093791160600000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空</span>\n<span class="token keyword">enum</span> Message <span class="token punctuation">{</span>\n    Quit<span class="token punctuation">,</span>\n    Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">Write</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">ChangeColor</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> msg1 <span class="token operator">=</span> Message<span class="token punctuation">::</span>Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 使用x = 1, y = 2 来初始化</span>\n    <span class="token keyword">let</span> msg2 <span class="token operator">=</span> Message<span class="token punctuation">::</span><span class="token function">Write</span><span class="token punctuation">(</span>String<span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"hello, world!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 "hello, world!" 来初始化</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题三-10"><a href="#%E9%97%AE%E9%A2%98%E4%B8%89-10" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题三</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="15881737050243604000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 仅填空并修复错误\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nfn main() {\n    let msg = Message::Move{x: 1, y: 2};\n\n    if let Message::Move{__} = msg {\n        assert_eq!(a, b);\n    } else {\n        panic!(&quot;不要让这行代码运行！&quot;);\n    }\n}`, `15881737050243604000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 仅填空并修复错误</span>\n<span class="token keyword">enum</span> Message <span class="token punctuation">{</span>\n    Quit<span class="token punctuation">,</span>\n    Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">Write</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">ChangeColor</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> msg <span class="token operator">=</span> Message<span class="token punctuation">::</span>Move<span class="token punctuation">{</span>x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token keyword">let</span> Message<span class="token punctuation">::</span>Move<span class="token punctuation">{</span>__<span class="token punctuation">}</span> <span class="token operator">=</span> msg <span class="token punctuation">{</span>\n        <span class="token function">assert_eq!</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token string">"不要让这行代码运行！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-93"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-93" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="187005529698636160"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 仅填空并修复错误\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nfn main() {\n    let msg = Message::Move { x: 1, y: 1 };\n\n    if let Message::Move { x: a, y: b } = msg {\n        assert_eq!(a, b);\n    } else {\n        panic!(&quot;不要让这行代码运行！&quot;);\n    }\n}`, `187005529698636160`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 仅填空并修复错误</span>\n<span class="token keyword">enum</span> Message <span class="token punctuation">{</span>\n    Quit<span class="token punctuation">,</span>\n    Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">Write</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">ChangeColor</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> msg <span class="token operator">=</span> Message<span class="token punctuation">::</span>Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token keyword">let</span> Message<span class="token punctuation">::</span>Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> a<span class="token punctuation">,</span> y<span class="token punctuation">:</span> b <span class="token punctuation">}</span> <span class="token operator">=</span> msg <span class="token punctuation">{</span>\n        <span class="token function">assert_eq!</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token string">"不要让这行代码运行！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题四-9"><a href="#%E9%97%AE%E9%A2%98%E5%9B%9B-9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题四</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="25674087806348080000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，并修复错误\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nfn main() {\n    let msgs: __ = [\n        Message::Quit,\n        Message::Move{x:1, y:3},\n        Message::ChangeColor(255,255,0)\n    ];\n\n    for msg in msgs {\n        show_message(msg)\n    }\n}\n\nfn show_message(msg: Message) {\n    println!(&quot;{}&quot;, msg);\n}`, `25674087806348080000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，并修复错误</span>\n<span class="token keyword">enum</span> Message <span class="token punctuation">{</span>\n    Quit<span class="token punctuation">,</span>\n    Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">Write</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">ChangeColor</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> msgs<span class="token punctuation">:</span> __ <span class="token operator">=</span> <span class="token punctuation">[</span>\n        Message<span class="token punctuation">::</span>Quit<span class="token punctuation">,</span>\n        Message<span class="token punctuation">::</span>Move<span class="token punctuation">{</span>x<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        Message<span class="token punctuation">::</span><span class="token function">ChangeColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> msg <span class="token keyword">in</span> msgs <span class="token punctuation">{</span>\n        <span class="token function">show_message</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">show_message</span><span class="token punctuation">(</span>msg<span class="token punctuation">:</span> Message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-94"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-94" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="21795964669986700000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，并修复错误\n#[derive(Debug)]\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nfn main() {\n    let msgs = [\n        Message::Quit,\n        Message::Move { x: 1, y: 3 },\n        Message::ChangeColor(255, 255, 0),\n    ];\n\n    for msg in msgs {\n        show_message(msg)\n    }\n}\n\nfn show_message(msg: Message) {\n    println!(&quot;{:#?}&quot;, msg);\n}`, `21795964669986700000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，并修复错误</span>\n<span class="token attribute attr-name">#[derive(Debug)]</span>\n<span class="token keyword">enum</span> Message <span class="token punctuation">{</span>\n    Quit<span class="token punctuation">,</span>\n    Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> i32<span class="token punctuation">,</span> y<span class="token punctuation">:</span> i32 <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">Write</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">ChangeColor</span><span class="token punctuation">(</span>i32<span class="token punctuation">,</span> i32<span class="token punctuation">,</span> i32<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> msgs <span class="token operator">=</span> <span class="token punctuation">[</span>\n        Message<span class="token punctuation">::</span>Quit<span class="token punctuation">,</span>\n        Message<span class="token punctuation">::</span>Move <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        Message<span class="token punctuation">::</span><span class="token function">ChangeColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> msg <span class="token keyword">in</span> msgs <span class="token punctuation">{</span>\n        <span class="token function">show_message</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">show_message</span><span class="token punctuation">(</span>msg<span class="token punctuation">:</span> Message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{:#?}"</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题五-9"><a href="#%E9%97%AE%E9%A2%98%E4%BA%94-9" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题五</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="85357840432216500000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空让 \\`println\\` 输出，同时添加一些代码不要让最后一行的 \\`panic\\` 执行到\nfn main() {\n    let five = Some(5);\n    let six = plus_one(five);\n    let none = plus_one(None);\n\n    if let __ = six {\n        println!(&quot;{}&quot;, n)\n    }\n\n    panic!(&quot;不要让这行代码运行！&quot;);\n}\n\nfn plus_one(x: Option<i32>) -> Option<i32> {\n    match x {\n        __ => None,\n        __ => Some(i + 1),\n    }\n}`, `85357840432216500000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空让 `println` 输出，同时添加一些代码不要让最后一行的 `panic` 执行到</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> five <span class="token operator">=</span> <span class="token function">Some</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> six <span class="token operator">=</span> <span class="token function">plus_one</span><span class="token punctuation">(</span>five<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> none <span class="token operator">=</span> <span class="token function">plus_one</span><span class="token punctuation">(</span>None<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token keyword">let</span> __ <span class="token operator">=</span> six <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token string">"不要让这行代码运行！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">plus_one</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> Option<span class="token operator">&lt;</span>i32<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">-></span> Option<span class="token operator">&lt;</span>i32<span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">match</span> x <span class="token punctuation">{</span>\n        __ <span class="token operator">=></span> None<span class="token punctuation">,</span>\n        __ <span class="token operator">=></span> <span class="token function">Some</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-95"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-95" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="25492707210079210000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空让 \\`println\\` 输出，同时添加一些代码不要让最后一行的 \\`panic\\` 执行到\nfn main() {\n    let five = Some(5);\n    let six = plus_one(five);\n    let none = plus_one(None);\n\n    if let Some(n) = six {\n        println!(&quot;{}&quot;, n);\n        return\n    }\n\n    panic!(&quot;不要让这行代码运行！&quot;);\n}\n\nfn plus_one(x: Option<i32>) -> Option<i32> {\n    match x {\n        None => None,\n        Some(i) => Some(i + 1),\n    }\n}`, `25492707210079210000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空让 `println` 输出，同时添加一些代码不要让最后一行的 `panic` 执行到</span>\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> five <span class="token operator">=</span> <span class="token function">Some</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> six <span class="token operator">=</span> <span class="token function">plus_one</span><span class="token punctuation">(</span>five<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> none <span class="token operator">=</span> <span class="token function">plus_one</span><span class="token punctuation">(</span>None<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token function">Some</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=</span> six <span class="token punctuation">{</span>\n        <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">panic!</span><span class="token punctuation">(</span><span class="token string">"不要让这行代码运行！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">plus_one</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> Option<span class="token operator">&lt;</span>i32<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">-></span> Option<span class="token operator">&lt;</span>i32<span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">match</span> x <span class="token punctuation">{</span>\n        None <span class="token operator">=></span> None<span class="token punctuation">,</span>\n        <span class="token function">Some</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">Some</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id="问题六-8"><a href="#%E9%97%AE%E9%A2%98%E5%85%AD-8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>问题六</h3>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="18302532572629572000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码运行\nuse crate::List::*;\n\nenum List {\n    // Cons: 链表中包含有值的节点，节点是元组类型，第一个元素是节点的值，第二个元素是指向下一个节点的指针\n    Cons(u32, Box<List>),\n    // Nil: 链表中的最后一个节点，用于说明链表的结束\n    Nil,\n}\n\n// 为枚举实现一些方法\nimpl List {\n    // 创建空的链表\n    fn new() -> List {\n        // 因为没有节点，所以直接返回 Nil 节点\n        // 枚举成员 Nil 的类型是 List\n        Nil\n    }\n\n    // 在老的链表前面新增一个节点，并返回新的链表\n    fn prepend(self, elem: u32) -> __ {\n        Cons(elem, Box::new(self))\n    }\n\n    // 返回链表的长度\n    fn len(&self) -> u32 {\n        match *self {\n            // 这里我们不能拿走 tail 的所有权，因此需要获取它的引用\n            Cons(_, __ tail) => 1 + tail.len(),\n            // 空链表的长度为 0\n            Nil => 0\n        }\n    }\n\n    // 返回链表的字符串表现形式，用于打印输出\n    fn stringify(&self) -> String {\n        match *self {\n            Cons(head, ref tail) => {\n                // 递归生成字符串\n                format!(&quot;{}, {}&quot;, head, tail.__())\n            },\n            Nil => {\n                format!(&quot;Nil&quot;)\n            },\n        }\n    }\n}\n\nfn main() {\n    // 创建一个新的链表(也是空的)\n    let mut list = List::new();\n\n    // 添加一些元素\n    list = list.prepend(1);\n    list = list.prepend(2);\n    list = list.prepend(3);\n\n    // 打印列表的当前状态\n    println!(&quot;链表的长度是: {}&quot;, list.len());\n    println!(&quot;{}&quot;, list.stringify());\n}`, `18302532572629572000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码运行</span>\n<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span>List<span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>\n\n<span class="token keyword">enum</span> List <span class="token punctuation">{</span>\n    <span class="token comment">// Cons: 链表中包含有值的节点，节点是元组类型，第一个元素是节点的值，第二个元素是指向下一个节点的指针</span>\n    <span class="token function">Cons</span><span class="token punctuation">(</span>u32<span class="token punctuation">,</span> Box<span class="token operator">&lt;</span>List<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// Nil: 链表中的最后一个节点，用于说明链表的结束</span>\n    Nil<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 为枚举实现一些方法</span>\n<span class="token keyword">impl</span> List <span class="token punctuation">{</span>\n    <span class="token comment">// 创建空的链表</span>\n    <span class="token keyword">fn</span> <span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> List <span class="token punctuation">{</span>\n        <span class="token comment">// 因为没有节点，所以直接返回 Nil 节点</span>\n        <span class="token comment">// 枚举成员 Nil 的类型是 List</span>\n        Nil\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 在老的链表前面新增一个节点，并返回新的链表</span>\n    <span class="token keyword">fn</span> <span class="token function">prepend</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">,</span> elem<span class="token punctuation">:</span> u32<span class="token punctuation">)</span> <span class="token punctuation">-></span> __ <span class="token punctuation">{</span>\n        <span class="token function">Cons</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> Box<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 返回链表的长度</span>\n    <span class="token keyword">fn</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> u32 <span class="token punctuation">{</span>\n        <span class="token keyword">match</span> <span class="token operator">*</span><span class="token keyword">self</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 这里我们不能拿走 tail 的所有权，因此需要获取它的引用</span>\n            <span class="token function">Cons</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> __ tail<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">1</span> <span class="token operator">+</span> tail<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token comment">// 空链表的长度为 0</span>\n            Nil <span class="token operator">=></span> <span class="token number">0</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 返回链表的字符串表现形式，用于打印输出</span>\n    <span class="token keyword">fn</span> <span class="token function">stringify</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n        <span class="token keyword">match</span> <span class="token operator">*</span><span class="token keyword">self</span> <span class="token punctuation">{</span>\n            <span class="token function">Cons</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> <span class="token keyword">ref</span> tail<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// 递归生成字符串</span>\n                <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"{}, {}"</span><span class="token punctuation">,</span> head<span class="token punctuation">,</span> tail<span class="token punctuation">.</span><span class="token function">__</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            Nil <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"Nil"</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 创建一个新的链表(也是空的)</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> list <span class="token operator">=</span> List<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 添加一些元素</span>\n    list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 打印列表的当前状态</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"链表的长度是: {}"</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id="我的解答-96"><a href="#%E6%88%91%E7%9A%84%E8%A7%A3%E7%AD%94-96" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>我的解答</h4>\n<div\n              class="gatsby-code-button-container"\n              data-toaster-id="23115054533834710000"\n              data-toaster-class="gatsby-code-button-toaster"\n              data-toaster-text-class="gatsby-code-button-toaster-text"\n              data-toaster-text="复制成功"\n              data-toaster-duration="3500"\n              onClick="copyToClipboard(`// 填空，让代码运行\nuse crate::List::*;\n\nenum List {\n    // Cons: 链表中包含有值的节点，节点是元组类型，第一个元素是节点的值，第二个元素是指向下一个节点的指针\n    Cons(u32, Box<List>),\n    // Nil: 链表中的最后一个节点，用于说明链表的结束\n    Nil,\n}\n\n// 为枚举实现一些方法\nimpl List {\n    // 创建空的链表\n    fn new() -> List {\n        // 因为没有节点，所以直接返回 Nil 节点\n        // 枚举成员 Nil 的类型是 List\n        Nil\n    }\n\n    // 在老的链表前面新增一个节点，并返回新的链表\n    fn prepend(self, elem: u32) -> List {\n        Cons(elem, Box::new(self))\n    }\n\n    // 返回链表的长度\n    fn len(&self) -> u32 {\n        match *self {\n            // 这里我们不能拿走 tail 的所有权，因此需要获取它的引用\n            Cons(_, ref tail) => 1 + tail.len(),\n            // 空链表的长度为 0\n            Nil => 0\n        }\n    }\n\n    // 返回链表的字符串表现形式，用于打印输出\n    fn stringify(&self) -> String {\n        match *self {\n            Cons(head, ref tail) => {\n                // 递归生成字符串\n                format!(&quot;{}, {}&quot;, head, tail.stringify())\n            },\n            Nil => {\n                format!(&quot;Nil&quot;)\n            },\n        }\n    }\n}\n\nfn main() {\n    // 创建一个新的链表(也是空的)\n    let mut list = List::new();\n\n    // 添加一些元素\n    list = list.prepend(1);\n    list = list.prepend(2);\n    list = list.prepend(3);\n\n    // 打印列表的当前状态\n    println!(&quot;链表的长度是: {}&quot;, list.len());\n    println!(&quot;{}&quot;, list.stringify());\n}`, `23115054533834710000`)"\n            >\n              <div\n                class="gatsby-code-button"\n                title="rust"\n              >\n                <span class="gatsby-code-button-language">rust</span>\n                <span class="gatsby-code-button-text-icon">复制代码</span>\n              </div>\n            </div>\n<div class="gatsby-highlight" data-language="rust"><pre style="counter-reset: linenumber NaN" class="language-rust line-numbers"><code class="language-rust"><span class="token comment">// 填空，让代码运行</span>\n<span class="token keyword">use</span> <span class="token keyword">crate</span><span class="token punctuation">::</span>List<span class="token punctuation">::</span><span class="token operator">*</span><span class="token punctuation">;</span>\n\n<span class="token keyword">enum</span> List <span class="token punctuation">{</span>\n    <span class="token comment">// Cons: 链表中包含有值的节点，节点是元组类型，第一个元素是节点的值，第二个元素是指向下一个节点的指针</span>\n    <span class="token function">Cons</span><span class="token punctuation">(</span>u32<span class="token punctuation">,</span> Box<span class="token operator">&lt;</span>List<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// Nil: 链表中的最后一个节点，用于说明链表的结束</span>\n    Nil<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 为枚举实现一些方法</span>\n<span class="token keyword">impl</span> List <span class="token punctuation">{</span>\n    <span class="token comment">// 创建空的链表</span>\n    <span class="token keyword">fn</span> <span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> List <span class="token punctuation">{</span>\n        <span class="token comment">// 因为没有节点，所以直接返回 Nil 节点</span>\n        <span class="token comment">// 枚举成员 Nil 的类型是 List</span>\n        Nil\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 在老的链表前面新增一个节点，并返回新的链表</span>\n    <span class="token keyword">fn</span> <span class="token function">prepend</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">,</span> elem<span class="token punctuation">:</span> u32<span class="token punctuation">)</span> <span class="token punctuation">-></span> List <span class="token punctuation">{</span>\n        <span class="token function">Cons</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> Box<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 返回链表的长度</span>\n    <span class="token keyword">fn</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> u32 <span class="token punctuation">{</span>\n        <span class="token keyword">match</span> <span class="token operator">*</span><span class="token keyword">self</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 这里我们不能拿走 tail 的所有权，因此需要获取它的引用</span>\n            <span class="token function">Cons</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token keyword">ref</span> tail<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">1</span> <span class="token operator">+</span> tail<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token comment">// 空链表的长度为 0</span>\n            Nil <span class="token operator">=></span> <span class="token number">0</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 返回链表的字符串表现形式，用于打印输出</span>\n    <span class="token keyword">fn</span> <span class="token function">stringify</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> String <span class="token punctuation">{</span>\n        <span class="token keyword">match</span> <span class="token operator">*</span><span class="token keyword">self</span> <span class="token punctuation">{</span>\n            <span class="token function">Cons</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> <span class="token keyword">ref</span> tail<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// 递归生成字符串</span>\n                <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"{}, {}"</span><span class="token punctuation">,</span> head<span class="token punctuation">,</span> tail<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            Nil <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"Nil"</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 创建一个新的链表(也是空的)</span>\n    <span class="token keyword">let</span> <span class="token keyword">mut</span> list <span class="token operator">=</span> List<span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 添加一些元素</span>\n    list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 打印列表的当前状态</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"链表的长度是: {}"</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"{}"</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>// TODO <a href="https://zh.practice.rs/compound-types/string.html" target="_blank" rel="nofollow noreferrer noopener">https://zh.practice.rs/compound-types/string.html</a></p>',
id:"/home/runner/work/GatsbyBlog/GatsbyBlog/blog/Rust练手测试/index.md absPath of file >>> MarkdownRemark",timeToRead:59,frontmatter:{date:"2022-08-02 17:24:05",path:"/rust-practice-test/",tags:"后端, Rust, 练手测试",title:"Rust练手测试",draft:null}}],length:1,tag:"Rust",pagesSum:1,page:1}}}});